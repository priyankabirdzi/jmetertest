<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="BASE URLs" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="PROD_BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">PROD_BASE_URL_1</stringProp>
            <stringProp name="Argument.value">ssrapi.birdzi.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DEV_BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">DEV_BASE_URL_1</stringProp>
            <stringProp name="Argument.value">ssrapi-dev.birdzi.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="UAT_BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">UAT_BASE_URL_1</stringProp>
            <stringProp name="Argument.value">ssrapi-uat.birdzi.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="current_timestamp" elementType="Argument">
            <stringProp name="Argument.name">current_timestamp</stringProp>
            <stringProp name="Argument.value">${__P(current_timestamp,${__time(YMDHMS)})}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="TestPlan.comments">index 0=yes and index 1=no  $.data.gameChallengeList.1.[1:]</stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Anthem_PROD_To get daily and weekly challenges from past, present and future days till a week" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="iOS: HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">advertisingid</stringProp>
              <stringProp name="Header.value">C4C0DDCB-18A9-4DCB-A368-281F70B9B9AB</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apikey</stringProp>
              <stringProp name="Header.value">KhhiYqz7cxPQ11n4m0DMgkUE+syU+nre6Rcp7UOvHpgu/QJ8LoVn71b6zt6uxwF/K9z5lqPTCMj/WGTITfSVXAJecGGYmfDfmbd63MA3O5akmWg+PLLtFreTSe3Tj0F+</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">appversioncode</stringProp>
              <stringProp name="Header.value">PWH v3.0.0-1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">companyid</stringProp>
              <stringProp name="Header.value">5541</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceosversion</stringProp>
              <stringProp name="Header.value">12.4.0</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">devicetypecode</stringProp>
              <stringProp name="Header.value">iOS</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceToken</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">mac</stringProp>
              <stringProp name="Header.value">a1:a1:a1:a1:a1:a1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/customers/login</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">email</stringProp>
                <stringProp name="Header.value">dailych1@birdzi.com</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">password</stringProp>
                <stringProp name="Header.value">Shiv123!@#</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">gmane@birdzi.com / Birdzi@2010
till
gmane+10</stringProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">email</stringProp>
                <stringProp name="Header.value">${email}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">password</stringProp>
                <stringProp name="Header.value">Shiv123!@#</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Email" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">user_email</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">,&quot;email&quot;:&quot;</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
            <stringProp name="BoundaryExtractor.default">***Email not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="SessionKey" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">sessionkey</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;sessionKey&quot;:&quot;</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;firstname</stringProp>
            <stringProp name="BoundaryExtractor.default">***session key not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustomerID" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">CustomerID</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot;:</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">***not found CustomerID***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="HomeStoreId" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">HomeStoreId</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;homeStoreId&quot;:</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">***Home store ID not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">Email=vars.get(&quot;user_email&quot;);

FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/Anthem/Result/Login_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);
 out.write(Email);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Dashboard" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getdashboard</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">2337</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Daily Aggregate" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getdailyaggregateslog</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">todaysdate</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">datefrom</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">dateto</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">2337</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getgamechallengecount" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getgamechallengecount</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Yesterday" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__timeShift(yyyy-MM-dd,,P-1D,,)}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Today" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="false">
            <intProp name="groupSize">100</intProp>
            <longProp name="timeoutInMs">0</longProp>
          </SyncTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Game Challenge List" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getgamechallengelist</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Yesterday" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__timeShift(yyyy-MM-dd,,P-1D,,)}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Today" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.1[1:]..name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Yesterday&apos;s Daily challenge not found</stringProp>
            <stringProp name="TestPlan.comments">To get the name of yesterday&apos;s daily challenge</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="2" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.2..name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Weekly challenge not found</stringProp>
            <stringProp name="TestPlan.comments">To get the name of yesterday&apos;s weekly challenge</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">cust_id=vars.get(&quot;CustomerID&quot;);
email=vars.get(&quot;user_email&quot;);
daily=vars.get(&quot;1&quot;);
weekly=vars.get(&quot;2&quot;);


FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/ProdRegister_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);

 out.write(email+ &quot;,&quot; + daily + &quot;,&quot; + weekly + &quot;,&quot; +cust_id);
 
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Weekly Recap" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getweeklyrecap</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="2 days" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Today" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="1" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.1[1:]..name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Yesterday&apos;s Daily challenge not found</stringProp>
            <stringProp name="TestPlan.comments">To get the name of yesterday&apos;s daily challenge</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="2" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.2..name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Weekly challenge not found</stringProp>
            <stringProp name="TestPlan.comments">To get the name of yesterday&apos;s weekly challenge</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">cust_id=vars.get(&quot;CustomerID&quot;);
email=vars.get(&quot;user_email&quot;);
daily=vars.get(&quot;1&quot;);
weekly=vars.get(&quot;2&quot;);


FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/ProdRegister_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);

 out.write(email+ &quot;,&quot; + daily + &quot;,&quot; + weekly + &quot;,&quot; +cust_id);
 
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Anthem_PROD_API_Automation" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Android: HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">advertisingid</stringProp>
              <stringProp name="Header.value">96B95601-CB58-4667-94D8-C8B5B39CD644</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apikey</stringProp>
              <stringProp name="Header.value">KhhiYqz7cxPQ11n4m0DMgkUE+syU+nre6Rcp7UOvHpgu/QJ8LoVn71b6zt6uxwF/K9z5lqPTCMj/WGTITfSVXAJecGGYmfDfmbd63MA3O5akmWg+PLLtFreTSe3Tj0F+</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">appversioncode</stringProp>
              <stringProp name="Header.value">DTC v1.5.0-2</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">companyid</stringProp>
              <stringProp name="Header.value">5541</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceosversion</stringProp>
              <stringProp name="Header.value">9</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">devicetypecode</stringProp>
              <stringProp name="Header.value">ANDROID</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceToken</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">mac</stringProp>
              <stringProp name="Header.value">20:A6:0C:F7:D9:BA</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">sessionKey</stringProp>
              <stringProp name="Header.value">API</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="iOS: HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">advertisingid</stringProp>
              <stringProp name="Header.value">C4C0DDCB-18A9-4DCB-A368-281F70B9B9AB</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apikey</stringProp>
              <stringProp name="Header.value">KhhiYqz7cxPQ11n4m0DMgkUE+syU+nre6Rcp7UOvHpgu/QJ8LoVn71b6zt6uxwF/K9z5lqPTCMj/WGTITfSVXAJecGGYmfDfmbd63MA3O5akmWg+PLLtFreTSe3Tj0F+</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">appversioncode</stringProp>
              <stringProp name="Header.value">PWH v3.0.0-1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">companyid</stringProp>
              <stringProp name="Header.value">5541</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceosversion</stringProp>
              <stringProp name="Header.value">12.4.0</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">devicetypecode</stringProp>
              <stringProp name="Header.value">iOS</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceToken</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">mac</stringProp>
              <stringProp name="Header.value">a1:a1:a1:a1:a1:a1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/customers/login</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">email</stringProp>
                <stringProp name="Header.value">@birdzi.com</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">password</stringProp>
                <stringProp name="Header.value">Shiv123!@#</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">gmane@birdzi.com / Birdzi@2010
till
gmane+10</stringProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">email</stringProp>
                <stringProp name="Header.value">${email}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">password</stringProp>
                <stringProp name="Header.value">Shiv123!@#</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Email" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">user_email</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">,&quot;email&quot;:&quot;</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
            <stringProp name="BoundaryExtractor.default">***Email not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="SessionKey" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">sessionkey</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;sessionKey&quot;:&quot;</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;firstname</stringProp>
            <stringProp name="BoundaryExtractor.default">***session key not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustomerID" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">CustomerID</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot;:</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">***not found CustomerID***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="HomeStoreId" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">HomeStoreId</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;homeStoreId&quot;:</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">***Home store ID not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">Email=vars.get(&quot;user_email&quot;);

FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/Anthem/Result/Login_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);
 out.write(Email);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Female Registration" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First screen" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/register</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">email</stringProp>
                  <stringProp name="Header.value">perf_anthem${__Random(1,9999999,email)}@birdzi.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">password</stringProp>
                  <stringProp name="Header.value">Shiv123!@#</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">zip</stringProp>
                  <stringProp name="Header.value">12345</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">phone</stringProp>
                  <stringProp name="Header.value">9029${__Random(1,999999,phone)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">birthdate</stringProp>
                  <stringProp name="Header.value">04/27/2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">yob</stringProp>
                  <stringProp name="Header.value">2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">loyaltyno</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">gender</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">code</stringProp>
                  <stringProp name="Header.value">Test2021</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">firstname</stringProp>
                  <stringProp name="Header.value">Perf</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">lastname</stringProp>
                  <stringProp name="Header.value">User</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">perf_anthem${__Random(1,9999999,email)}@birdzi.com</stringProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="email" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">email</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">,&quot;email&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
              <stringProp name="BoundaryExtractor.default">***Email not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="SessionKey" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">sessionkey</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;sessionKey&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;firstname</stringProp>
              <stringProp name="BoundaryExtractor.default">***session key not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustomerID" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">CustomerID</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***not found CustomerID***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="HomeStoreId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">HomeStoreId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;homeStoreId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***Home store ID not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="firstname" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">firstname</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;firstname&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***firstname not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="lastname" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">lastname</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;lastname&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***lastname not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="zip" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">zip</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;zip&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***zip not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="phone" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">phone</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;phone&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***phone not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="birthDate" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">birthDate</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;birthDate&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***birthDate not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="yob" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">yob</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;yob&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***yob not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">email_id=vars.get(&quot;email&quot;);
session_key=vars.get(&quot;sessionkey&quot;);
cust_id=vars.get(&quot;CustomerID&quot;);

FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/Register_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);
 out.write(email_id + &quot;,&quot; + session_key + &quot;,&quot; + cust_id);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetGameChallengeCount(On Successful registration following calls will be made for fetching and setting up essential data)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getgamechallengecount</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">2021-04-30 10:45:44  2021-23-30 11:23:30</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProfle(Fetch and save user data)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/getprofile</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">2021-04-30 10:45:44  2021-23-30 11:23:30</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Female Gender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putprofile</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">email</stringProp>
                  <stringProp name="Header.value">${email}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">firstname</stringProp>
                  <stringProp name="Header.value">${firstname}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">lastname</stringProp>
                  <stringProp name="Header.value">${lastname}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">gender</stringProp>
                  <stringProp name="Header.value">F</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">zip</stringProp>
                  <stringProp name="Header.value">${zip}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">phone</stringProp>
                  <stringProp name="Header.value">${phone}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">birthdate</stringProp>
                  <stringProp name="Header.value">04/27/2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">yob</stringProp>
                  <stringProp name="Header.value">${yob}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">height</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">loyaltyno</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="On Successful response make attribute update for Female" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1007&quot;&#xd;
}]&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Height/Weight" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putprofile</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">email</stringProp>
                  <stringProp name="Header.value">${email}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">firstname</stringProp>
                  <stringProp name="Header.value">${firstname}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">lastname</stringProp>
                  <stringProp name="Header.value">${lastname}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">gender</stringProp>
                  <stringProp name="Header.value">F</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">zip</stringProp>
                  <stringProp name="Header.value">${zip}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">phone</stringProp>
                  <stringProp name="Header.value">${phone}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">birthdate</stringProp>
                  <stringProp name="Header.value">04/30/2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">yob</stringProp>
                  <stringProp name="Header.value">${yob}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">height</stringProp>
                  <stringProp name="Header.value">5.4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">weight</stringProp>
                  <stringProp name="Header.value">{&quot;onboarding&quot;:&quot;yes&quot;,&quot;lbs&quot;:170}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">loyaltyno</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="How active are you?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
&quot;ConditionType&quot;:&quot;3&quot;,&#xd;
&quot;Condition&quot;:&quot;1007&quot;&#xd;
},&#xd;
&#xd;
{&#xd;
&quot;ConditionType&quot;:5,&#xd;
&quot;Condition&quot;:50001,&#xd;
&quot;Value&quot;:&quot;{Active}&quot;&#xd;
}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Select Each Statement that describes you best " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1007&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1001&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1004&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1005&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="What is your Hemoglobin A1C level?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;a1clevel&quot;:&quot;7.5&quot;,&quot;onboarding&quot;:&quot;yes&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">14</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">gzip;q=0,deflate,sdch          gzip, deflate</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="TestPlan.comments">index 0=yes and index 1=no</stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="How many times do you test in a day?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;dimensionId&quot;:3,&quot;enabled&quot;:true,&quot;goals&quot;:[3]}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/putdimensiongoalsupsertall</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Connect Your Device" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/putgamificationevent</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">eventid</stringProp>
                  <stringProp name="Header.value">3</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pregnancy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1007&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1001&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1004&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1005&quot;},{&quot;ConditionType&quot;:5,&quot;Condition&quot;:50003,&quot;Value&quot;:&quot;{2021-09-30}&quot;},{&quot;ConditionType&quot;:5,&quot;Condition&quot;:50004,&quot;Value&quot;:&quot;{Male}&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Select Each Statement That Describes You Best" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1007&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1001&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1004&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1005&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="What do you care about when your food is Processed?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1007&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1001&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1004&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1005&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1022&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1023&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1013&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1021&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Artificial Ingredients &gt; Antibiotics Free ,  Artificial Color Free     Clean Label &gt; Added Sugar Free, All Natural
</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Which diets are you following?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1007&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1001&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1004&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1005&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1027&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1124&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1075&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1080&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1132&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1068&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1022&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1023&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1013&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1021&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Diet Programs &gt; Atkins Diet , Weight Watchers    Health Conscious Diets &gt; Low Fat ,  Low Sugar      Lifestyle Diets &gt; Ketogenic , Kosher
</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Do you have any allergies? " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1007&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1001&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1004&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1005&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1036&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1051&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1029&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1035&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1027&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1124&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1075&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1080&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1132&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1068&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1022&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1023&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1013&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1021&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Allergens &gt; Egg Free , Fish Free               Intolerance &gt; Casein Free , Dairy Free
</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Thank you Screen" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/getattributes</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Sync app with all attributes updated in on-boarding process</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey -- Fetch nutrition survey list" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getsurvey</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveycode</stringProp>
                  <stringProp name="Header.value">NUTRITION</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="surveyId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">surveyId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;surveyId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***surveyId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey -- Submit survey response" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;questionId&quot;:45,&quot;choiceList&quot;:[{&quot;choiceId&quot;:217,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:46,&quot;choiceList&quot;:[{&quot;choiceId&quot;:221,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:222,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:223,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:47,&quot;choiceList&quot;:[{&quot;choiceId&quot;:228,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:229,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:259,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:48,&quot;choiceList&quot;:[{&quot;choiceId&quot;:262,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:263,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:241,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:49,&quot;choiceList&quot;:[{&quot;choiceId&quot;:264,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:245,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:50,&quot;choiceList&quot;:[{&quot;choiceId&quot;:250,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:251,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:51,&quot;choiceList&quot;:[{&quot;choiceId&quot;:255,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:256,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:52,&quot;choiceList&quot;:[{&quot;choiceId&quot;:230,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:266,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:53,&quot;choiceList&quot;:[{&quot;choiceId&quot;:238,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:239,&quot;data&quot;:&quot;&quot;}]}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/postsurveyresponse</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="surveyResponseId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">surveyResponseId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;surveyResponseId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">}</stringProp>
              <stringProp name="BoundaryExtractor.default">***surveyResponseId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveyid</stringProp>
                  <stringProp name="Header.value">${surveyId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey --  Get survey result response" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getsurveyresult</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveyid</stringProp>
                  <stringProp name="Header.value">${surveyId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveyresponseid</stringProp>
                  <stringProp name="Header.value">${surveyResponseId}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey --  Set goals from survey result screen" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;dimensionId&quot;:9,&quot;enabled&quot;:true,&quot;goals&quot;:[78,79,80,81,82],&quot;options&quot;:[]}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/putdimensiongoalsupsertall</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Turn Goals ON and set values for Dimension id 2(Blood Pressure)" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Turn ON Goals" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&#xd;
{&quot;dimensionId&quot;:2,&quot;enabled&quot;:true,&quot;goals&quot;:[1]}&#xd;
]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ssrapi/board/putdimensiongoalsupsertall</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dimensionid</stringProp>
                    <stringProp name="Header.value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sessionKey</stringProp>
                    <stringProp name="Header.value">${sessionkey}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">customerid</stringProp>
                    <stringProp name="Header.value">${CustomerID}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
              </HeaderManager>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">devicetimestamp</stringProp>
                    <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Add all widgets on Dashboard from EDIT" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Dashboard Widget List" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[[&quot;widgetId&quot;: &quot;15&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;1&quot;], [&quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;2&quot;, &quot;widgetId&quot;: &quot;1&quot;], [&quot;sequence&quot;: &quot;3&quot;, &quot;widgetId&quot;: &quot;2&quot;, &quot;isEnabled&quot;: true], [&quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;4&quot;, &quot;widgetId&quot;: &quot;13&quot;], [&quot;widgetId&quot;: &quot;12&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;5&quot;], [&quot;widgetId&quot;: &quot;5&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;6&quot;], [&quot;isEnabled&quot;: true, &quot;widgetId&quot;: &quot;4&quot;, &quot;sequence&quot;: &quot;7&quot;], [&quot;isEnabled&quot;: true, &quot;widgetId&quot;: &quot;6&quot;, &quot;sequence&quot;: &quot;8&quot;], [&quot;widgetId&quot;: &quot;8&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;9&quot;], [&quot;isEnabled&quot;: true, &quot;widgetId&quot;: &quot;9&quot;, &quot;sequence&quot;: &quot;10&quot;], [&quot;isEnabled&quot;: true, &quot;widgetId&quot;: &quot;10&quot;, &quot;sequence&quot;: &quot;11&quot;], [&quot;widgetId&quot;: &quot;14&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;12&quot;], [&quot;sequence&quot;: &quot;13&quot;, &quot;widgetId&quot;: &quot;3&quot;, &quot;isEnabled&quot;: true], [&quot;widgetId&quot;: &quot;7&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;14&quot;], [&quot;widgetId&quot;: &quot;11&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;15&quot;], [&quot;widgetId&quot;: &quot;16&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;16&quot;]]&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ssrapi/board/getdashboardwidgetlist</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sessionKey</stringProp>
                    <stringProp name="Header.value">${sessionkey}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">customerid</stringProp>
                    <stringProp name="Header.value">${CustomerID}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">storeid</stringProp>
                    <stringProp name="Header.value">${HomeStoreId}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add All Widgets on Dashboard" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[{&quot;widgetId&quot;:15,&quot;isEnabled&quot;:true,&quot;sequence&quot;:4},{&quot;widgetId&quot;:1,&quot;isEnabled&quot;:true,&quot;sequence&quot;:5},{&quot;widgetId&quot;:2,&quot;isEnabled&quot;:true,&quot;sequence&quot;:6},{&quot;widgetId&quot;:13,&quot;isEnabled&quot;:true,&quot;sequence&quot;:7},{&quot;widgetId&quot;:12,&quot;isEnabled&quot;:true,&quot;sequence&quot;:8},{&quot;widgetId&quot;:5,&quot;isEnabled&quot;:true,&quot;sequence&quot;:9},{&quot;widgetId&quot;:4,&quot;isEnabled&quot;:true,&quot;sequence&quot;:10},{&quot;widgetId&quot;:6,&quot;isEnabled&quot;:true,&quot;sequence&quot;:11},{&quot;widgetId&quot;:8,&quot;isEnabled&quot;:true,&quot;sequence&quot;:12},{&quot;widgetId&quot;:9,&quot;isEnabled&quot;:true,&quot;sequence&quot;:13},{&quot;widgetId&quot;:10,&quot;isEnabled&quot;:true,&quot;sequence&quot;:14},{&quot;widgetId&quot;:14,&quot;isEnabled&quot;:true,&quot;sequence&quot;:15},{&quot;widgetId&quot;:16,&quot;isEnabled&quot;:true,&quot;sequence&quot;:16},{&quot;widgetId&quot;:3,&quot;isEnabled&quot;:true,&quot;sequence&quot;:17},{&quot;widgetId&quot;:7,&quot;isEnabled&quot;:true,&quot;sequence&quot;:18},{&quot;widgetId&quot;:11,&quot;isEnabled&quot;:true,&quot;sequence&quot;:19}]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ssrapi/board/putdashboardwidgetupsert</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sessionKey</stringProp>
                    <stringProp name="Header.value">${sessionkey}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">customerid</stringProp>
                    <stringProp name="Header.value">${CustomerID}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">storeid</stringProp>
                    <stringProp name="Header.value">${HomeStoreId}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Daily Goals Acheived" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">timestamp</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
          </HeaderManager>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Daily Glucose Goals" enabled="false">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">3</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Sugar logs" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
	}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dimensionid</stringProp>
                    <stringProp name="Header.value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sessionKey</stringProp>
                    <stringProp name="Header.value">${sessionkey}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">customerid</stringProp>
                    <stringProp name="Header.value">${CustomerID}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
              </HeaderManager>
              <hashTree/>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="glu_1" elementType="Argument">
                    <stringProp name="Argument.name">glu_1</stringProp>
                    <stringProp name="Argument.value">pre</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_2" elementType="Argument">
                    <stringProp name="Argument.name">glu_2</stringProp>
                    <stringProp name="Argument.value">post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_3" elementType="Argument">
                    <stringProp name="Argument.name">glu_3</stringProp>
                    <stringProp name="Argument.value">fasting</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily sleep Goals" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;14&quot;,&#xd;
  &quot;wellrested&quot; : &quot;${__V(sleep_option_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,P5DT2H,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,P5DT2H,,)}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created to test a week challenge for sleep logs</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Nutrition Goals" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getnutritiongoalsquestion</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__timeShift(MM/dd/yyyy&apos; &apos;HH:mm:ss,,-P${__counter(,)}DT2M,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId1" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId1</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId2" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId2 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId3" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId3</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId3 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">3</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId4" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId4</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId4 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">4</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId5" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId5</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId5 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">5</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points1" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 1 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points2" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">2</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 2 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points3" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points3</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">3</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 3 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points4" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points4</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[1]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">4</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 4 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points5" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points5</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[1]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">5</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 5 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Nutrition Goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;answers&quot;:&#xd;
	[{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId1},&#xd;
		&quot;points&quot;:${points1},&#xd;
		&quot;answer&quot;:&quot;yes&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId2},&#xd;
		&quot;points&quot;:${points2},&#xd;
		&quot;answer&quot;:&quot;yes&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId3},&#xd;
		&quot;points&quot;:${points3},&#xd;
		&quot;answer&quot;:&quot;yes&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId4},&#xd;
		&quot;points&quot;:${points4},&#xd;
		&quot;answer&quot;:&quot;no&quot;&#xd;
	},&#xd;
&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId5},&#xd;
		&quot;points&quot;:${points5},&#xd;
		&quot;answer&quot;:&quot;no&quot;&#xd;
	}],&#xd;
&#xd;
&quot;points&quot;:${__intSum(${points1},${points2},${points3},${points4},${points5})}		&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">index 0=yes and index 1=no           &quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;,</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__timeShift(MM/dd/yyyy&apos; &apos;HH:mm:ss,,-P${__counter(,)}DT2M,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Hydration logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ume&quot;: &quot;oz&quot;, &quot;quantity&quot;: ${__Random(1,250,hyd_value)}&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Focus logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;minutes&quot;:&quot;${__Random(1,180,focus_value)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Dimensions -&gt; WEIGHT(1), BLOODPRESSURE(2), GLUCOSE(3), ACTIVITY(4), FOCUS(5), HYDRATION(6), MEDS(7), SLEEP(8), NUTRITION(9) and MOOD(10)</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Activity logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: &quot;10000&quot;, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Pressure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Awards --- 100 Nutrition logs" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">100</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Nutrition Goals" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getnutritiongoalsquestion</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__timeShift(MM/dd/yyyy&apos; &apos;HH:mm:ss,,-P${__counter(,)}DT2M,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId1" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId1</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId2" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId2 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId3" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId3</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId3 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">3</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId4" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId4</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId4 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">4</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId5" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId5</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId5 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">5</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points1" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 1 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points2" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">2</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 2 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points3" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points3</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">3</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 3 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points4" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points4</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[1]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">4</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 4 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points5" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points5</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[1]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">5</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 5 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;answers&quot;:&#xd;
	[{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId1},&#xd;
		&quot;points&quot;:${points1},&#xd;
		&quot;answer&quot;:&quot;yes&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId2},&#xd;
		&quot;points&quot;:${points2},&#xd;
		&quot;answer&quot;:&quot;yes&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId3},&#xd;
		&quot;points&quot;:${points3},&#xd;
		&quot;answer&quot;:&quot;yes&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId4},&#xd;
		&quot;points&quot;:${points4},&#xd;
		&quot;answer&quot;:&quot;no&quot;&#xd;
	},&#xd;
&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId5},&#xd;
		&quot;points&quot;:${points5},&#xd;
		&quot;answer&quot;:&quot;no&quot;&#xd;
	}],&#xd;
&#xd;
&quot;points&quot;:${__intSum(${points1},${points2},${points3},${points4},${points5})}		&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">index 0=yes and index 1=no</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__timeShift(MM/dd/yyyy&apos; &apos;HH:mm:ss,,-P${__counter(,)}DT2M,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Awards --- 100 Logs" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">100</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="100 Sleep logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;14&quot;,&#xd;
  &quot;wellrested&quot; : &quot;${__V(sleep_option_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="100 Hydration logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ume&quot;: &quot;oz&quot;, &quot;quantity&quot;: ${__Random(1,250,hyd_value)}&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="100 Activity logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: &quot;${__Random(100,5000,steps_value)}&quot;, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="100 Blood Sugar logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
	}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="glu_1" elementType="Argument">
                  <stringProp name="Argument.name">glu_1</stringProp>
                  <stringProp name="Argument.value">pre</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_2" elementType="Argument">
                  <stringProp name="Argument.name">glu_2</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_3" elementType="Argument">
                  <stringProp name="Argument.name">glu_3</stringProp>
                  <stringProp name="Argument.value">fasting</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="100 Focus logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;minutes&quot;:&quot;${__Random(1,180,focus_value)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Dimensions -&gt; WEIGHT(1), BLOODPRESSURE(2), GLUCOSE(3), ACTIVITY(4), FOCUS(5), HYDRATION(6), MEDS(7), SLEEP(8), NUTRITION(9) and MOOD(10)</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="100 Blood Pressure---- Health log" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Awards --- 100 Health Logs " enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">100</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">timestamp</stringProp>
                <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Blood Pressure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Blood Sugar logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
	}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="glu_1" elementType="Argument">
                  <stringProp name="Argument.name">glu_1</stringProp>
                  <stringProp name="Argument.value">pre</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_2" elementType="Argument">
                  <stringProp name="Argument.name">glu_2</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_3" elementType="Argument">
                  <stringProp name="Argument.name">glu_3</stringProp>
                  <stringProp name="Argument.value">fasting</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Medication --- Incomplete" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="glu_1" elementType="Argument">
                  <stringProp name="Argument.name">glu_1</stringProp>
                  <stringProp name="Argument.value">pre</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_2" elementType="Argument">
                  <stringProp name="Argument.name">glu_2</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_3" elementType="Argument">
                  <stringProp name="Argument.name">glu_3</stringProp>
                  <stringProp name="Argument.value">fasting</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">advertisingid</stringProp>
                  <stringProp name="Header.value">C4C0DDCB-18A9-4DCB-A368-281F70B9B9AB</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">apikey</stringProp>
                  <stringProp name="Header.value">KTJ9hVJTZdVyxZY4xjz5wnE1y8OGCwK65LFZxuaN6rF3HixTMpVg4Od9g9JH/g3zKUIRfnhLOPZ0k/phiRri6RYOby/28WztKpP21alfXeUT+rJb2gz3yamHiqxr69yF</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">appversioncode</stringProp>
                  <stringProp name="Header.value">PWH v1.6.0-1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">companyid</stringProp>
                  <stringProp name="Header.value">5541</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">deviceosversion</stringProp>
                  <stringProp name="Header.value">12.4.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetypecode</stringProp>
                  <stringProp name="Header.value">iOS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">deviceToken</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">mac</stringProp>
                  <stringProp name="Header.value">a1:a1:a1:a1:a1:a1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(MM/dd/yyyy&apos; &apos;HH:mm:ss,,-P${__counter(,)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(MM/dd/yyyy&apos; &apos;HH:mm:ss,,-P${__counter(,)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}   ${__timeShift(dd-MM-yyyy,,-P${__counter(,)}D,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}   ${__timeShift(dd-MM-yyyy,,-P${__counter(,)}D,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Awards --- Single Action" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Complete A 5k" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: &quot;5962&quot;, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Activities by Steps/Miles/Time" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">dimensionid</stringProp>
                <stringProp name="Header.value">4</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionKey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerid</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Activities by Steps" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: &quot;${__Random(100,5000,steps_value)}&quot;, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Activities by Miles" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: &quot;${__Random(100,5000,steps_value)}&quot;, &#xd;
	&quot;ume&quot;: &quot;miles&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Activities by Time" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: &quot;10&quot;, &#xd;
	&quot;ume&quot;: &quot;minutes&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">timestamp</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/customers/logout</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerid</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="10th Flawless Week" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="TestPlan.comments">A flawless week is per dimension.
So if you enter 7 days 100% for 5 dimensions you have 5 flawless weeks.</stringProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Sugar logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="glu_1" elementType="Argument">
                  <stringProp name="Argument.name">glu_1</stringProp>
                  <stringProp name="Argument.value">pre</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_2" elementType="Argument">
                  <stringProp name="Argument.name">glu_2</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_3" elementType="Argument">
                  <stringProp name="Argument.name">glu_3</stringProp>
                  <stringProp name="Argument.value">fasting</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Hydration logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ume&quot;: &quot;oz&quot;, &quot;quantity&quot;: 249&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Focus logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;minutes&quot;: 15&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Dimensions -&gt; WEIGHT(1), BLOODPRESSURE(2), GLUCOSE(3), ACTIVITY(4), FOCUS(5), HYDRATION(6), MEDS(7), SLEEP(8), NUTRITION(9) and MOOD(10)</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Activity logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: 20000, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Pressure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily sleep goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;14&quot;,&#xd;
  &quot;wellrested&quot; : &quot;${__V(sleep_option_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="50th Flawless Week" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="TestPlan.comments">A flawless week is per dimension.
So if you enter 7 days 100% for 5 dimensions you have 5 flawless weeks.</stringProp>
          <stringProp name="LoopController.loops">50</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Sugar logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="glu_1" elementType="Argument">
                  <stringProp name="Argument.name">glu_1</stringProp>
                  <stringProp name="Argument.value">pre</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_2" elementType="Argument">
                  <stringProp name="Argument.name">glu_2</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_3" elementType="Argument">
                  <stringProp name="Argument.name">glu_3</stringProp>
                  <stringProp name="Argument.value">fasting</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Hydration logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ume&quot;: &quot;oz&quot;, &quot;quantity&quot;: 249&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Focus logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;minutes&quot;: 15&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Dimensions -&gt; WEIGHT(1), BLOODPRESSURE(2), GLUCOSE(3), ACTIVITY(4), FOCUS(5), HYDRATION(6), MEDS(7), SLEEP(8), NUTRITION(9) and MOOD(10)</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Activity logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: 20000, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Pressure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily sleep goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;14&quot;,&#xd;
  &quot;wellrested&quot; : &quot;${__V(sleep_option_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="100 Flawless Week" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="TestPlan.comments">A flawless week is per dimension.
So if you enter 7 days 100% for 7 dimensions you have 7 flawless weeks.</stringProp>
          <stringProp name="LoopController.loops">150</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Hydration logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ume&quot;: &quot;oz&quot;, &quot;quantity&quot;: 249&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Focus logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;minutes&quot;: 15&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Dimensions -&gt; WEIGHT(1), BLOODPRESSURE(2), GLUCOSE(3), ACTIVITY(4), FOCUS(5), HYDRATION(6), MEDS(7), SLEEP(8), NUTRITION(9) and MOOD(10)</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Activity logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: 20000, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Pressure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily sleep goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;14&quot;,&#xd;
  &quot;wellrested&quot; : &quot;${__V(sleep_option_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Single Action for Weight and A1C" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">timestamp</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}   ${__timeShift(dd-MM-yyyy,,-P${__counter(,)}D,,)}</stringProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="A1C" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;a1clevel&quot;: &quot;${__groovy(new java.text.DecimalFormat(&apos;0.#&apos;).format(Math.ceil(org.apache.commons.lang3.RandomUtils.nextFloat(4.1f\, 15f) * 2) / 2),)}&quot;&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">14</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Weight" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;lbs&quot;:&quot;${__Random(1,999,weight_value)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="First Flawless All Pillars(all 7 dimenstion in a week)" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">20</stringProp>
        </LoopController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Blood Sugar logs" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Blood Sugar logs" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">devicetimestamp</stringProp>
                    <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dimensionid</stringProp>
                    <stringProp name="Header.value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sessionKey</stringProp>
                    <stringProp name="Header.value">${sessionkey}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">customerid</stringProp>
                    <stringProp name="Header.value">${CustomerID}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
              </HeaderManager>
              <hashTree/>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="glu_1" elementType="Argument">
                    <stringProp name="Argument.name">glu_1</stringProp>
                    <stringProp name="Argument.value">pre</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_2" elementType="Argument">
                    <stringProp name="Argument.name">glu_2</stringProp>
                    <stringProp name="Argument.value">post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_3" elementType="Argument">
                    <stringProp name="Argument.name">glu_3</stringProp>
                    <stringProp name="Argument.value">fasting</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Blood Sugar logs" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">devicetimestamp</stringProp>
                    <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dimensionid</stringProp>
                    <stringProp name="Header.value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sessionKey</stringProp>
                    <stringProp name="Header.value">${sessionkey}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">customerid</stringProp>
                    <stringProp name="Header.value">${CustomerID}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
              </HeaderManager>
              <hashTree/>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="glu_1" elementType="Argument">
                    <stringProp name="Argument.name">glu_1</stringProp>
                    <stringProp name="Argument.value">pre</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_2" elementType="Argument">
                    <stringProp name="Argument.name">glu_2</stringProp>
                    <stringProp name="Argument.value">post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_3" elementType="Argument">
                    <stringProp name="Argument.name">glu_3</stringProp>
                    <stringProp name="Argument.value">fasting</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Blood Sugar logs" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">devicetimestamp</stringProp>
                    <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dimensionid</stringProp>
                    <stringProp name="Header.value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sessionKey</stringProp>
                    <stringProp name="Header.value">${sessionkey}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">customerid</stringProp>
                    <stringProp name="Header.value">${CustomerID}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
              </HeaderManager>
              <hashTree/>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="glu_1" elementType="Argument">
                    <stringProp name="Argument.name">glu_1</stringProp>
                    <stringProp name="Argument.value">pre</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_2" elementType="Argument">
                    <stringProp name="Argument.name">glu_2</stringProp>
                    <stringProp name="Argument.value">post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_3" elementType="Argument">
                    <stringProp name="Argument.name">glu_3</stringProp>
                    <stringProp name="Argument.value">fasting</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Hydration logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ume&quot;: &quot;oz&quot;, &quot;quantity&quot;: &quot;100&quot;&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Focus logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;minutes&quot;:&quot;10&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Dimensions -&gt; WEIGHT(1), BLOODPRESSURE(2), GLUCOSE(3), ACTIVITY(4), FOCUS(5), HYDRATION(6), MEDS(7), SLEEP(8), NUTRITION(9) and MOOD(10)</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Activity logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: &quot;10000&quot;, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Blood Pressure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sleep goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;14&quot;,&#xd;
  &quot;wellrested&quot; : &quot;yes&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Nutrition Goals" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getnutritiongoalsquestion</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}   ${__timeShift(dd-MM-yyyy,,-P${__counter(,)}D,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId1" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId1</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId2" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId2 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId3" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId3</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId3 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">3</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId4" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId4</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId4 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">4</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId5" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId5</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId5 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">5</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points1" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points1</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points1 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points2" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points2 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points3" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points3</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points3 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">3</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points4" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points4</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points4 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">4</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points5" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points5</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points5 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">5</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;answers&quot;:&#xd;
	[{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId1},&#xd;
		&quot;points&quot;:${points1},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId2},&#xd;
		&quot;points&quot;:${points2},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId3},&#xd;
		&quot;points&quot;:${points3},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId4},&#xd;
		&quot;points&quot;:${points4},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId5},&#xd;
		&quot;points&quot;:${points5},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	}],&#xd;
&#xd;
&quot;points&quot;:${__intSum(${points1},${points2},${points3},${points4},${points5})}		&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">index 0=yes and index 1=no</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="nutri_option_1" elementType="Argument">
                  <stringProp name="Argument.name">nutri_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nutri_option_2" elementType="Argument">
                  <stringProp name="Argument.name">nutri_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}   ${__timeShift(dd-MM-yyyy,,-P${__counter(,)}D,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Complete till Level 4" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">700</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Sugar logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="glu_1" elementType="Argument">
                  <stringProp name="Argument.name">glu_1</stringProp>
                  <stringProp name="Argument.value">pre</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_2" elementType="Argument">
                  <stringProp name="Argument.name">glu_2</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_3" elementType="Argument">
                  <stringProp name="Argument.name">glu_3</stringProp>
                  <stringProp name="Argument.value">fasting</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(701,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(701,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Hydration logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ume&quot;: &quot;oz&quot;, &quot;quantity&quot;: 249&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(701,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(701,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Focus logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;minutes&quot;: 15&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Dimensions -&gt; WEIGHT(1), BLOODPRESSURE(2), GLUCOSE(3), ACTIVITY(4), FOCUS(5), HYDRATION(6), MEDS(7), SLEEP(8), NUTRITION(9) and MOOD(10)</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(701,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(701,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Activity logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: 20000, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(701,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(701,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Pressure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(701,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily sleep goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;14&quot;,&#xd;
  &quot;wellrested&quot; : &quot;${__V(sleep_option_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(701,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(701,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Anthem PROD --- Extract no. of Daily and Weekly challenges shown to users" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">20</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="TestPlan.comments">1. Create new user and skip all onboarding screens
2. Now, log data and complete nutrition survey to complete new user challenges
3. Go to Dashboard to fetch all stats(necessary step as challenges wont appear unless dashboard notification appears)
4. Check Challenges screen for Weekly and Daily challenges(Weekly challenge always must be 1 per week and Daily can keep incrementing till 7 if not completed)

Note: 
1. Sync timer is added to game challenge list so that it hits in same ms for all users
2. Multiple times dashboard and aggregate api is called to get proper stats</stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Android: HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">advertisingid</stringProp>
              <stringProp name="Header.value">96B95601-CB58-4667-94D8-C8B5B39CD644</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apikey</stringProp>
              <stringProp name="Header.value">KhhiYqz7cxPQ11n4m0DMgkUE+syU+nre6Rcp7UOvHpgu/QJ8LoVn71b6zt6uxwF/K9z5lqPTCMj/WGTITfSVXAJecGGYmfDfmbd63MA3O5akmWg+PLLtFreTSe3Tj0F+</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">appversioncode</stringProp>
              <stringProp name="Header.value">DTC v1.5.0-2</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">companyid</stringProp>
              <stringProp name="Header.value">5541</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceosversion</stringProp>
              <stringProp name="Header.value">9</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">devicetypecode</stringProp>
              <stringProp name="Header.value">ANDROID</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceToken</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">mac</stringProp>
              <stringProp name="Header.value">20:A6:0C:F7:D9:BA</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">sessionKey</stringProp>
              <stringProp name="Header.value">API</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="iOS: HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">advertisingid</stringProp>
              <stringProp name="Header.value">C4C0DDCB-18A9-4DCB-A368-281F70B9B9AB</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apikey</stringProp>
              <stringProp name="Header.value">KhhiYqz7cxPQ11n4m0DMgkUE+syU+nre6Rcp7UOvHpgu/QJ8LoVn71b6zt6uxwF/K9z5lqPTCMj/WGTITfSVXAJecGGYmfDfmbd63MA3O5akmWg+PLLtFreTSe3Tj0F+</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">appversioncode</stringProp>
              <stringProp name="Header.value">PWH v1.6.0-1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">companyid</stringProp>
              <stringProp name="Header.value">5541</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceosversion</stringProp>
              <stringProp name="Header.value">12.4.0</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">devicetypecode</stringProp>
              <stringProp name="Header.value">iOS</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceToken</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">mac</stringProp>
              <stringProp name="Header.value">a1:a1:a1:a1:a1:a1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Female Registration" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First screen" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/register</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">email</stringProp>
                  <stringProp name="Header.value">prod_anthem${__Random(1,9999999,email)}@birdzi.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">password</stringProp>
                  <stringProp name="Header.value">Shiv123!@#</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">zip</stringProp>
                  <stringProp name="Header.value">12345</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">phone</stringProp>
                  <stringProp name="Header.value">9029${__Random(1,999999,phone)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">birthdate</stringProp>
                  <stringProp name="Header.value">04/27/2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">yob</stringProp>
                  <stringProp name="Header.value">2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">loyaltyno</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">gender</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">code</stringProp>
                  <stringProp name="Header.value">Test2021</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">firstname</stringProp>
                  <stringProp name="Header.value">Perf</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">lastname</stringProp>
                  <stringProp name="Header.value">User</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">perf_anthem${__Random(1,9999999,email)}@birdzi.com</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">email</stringProp>
                  <stringProp name="Header.value">anthemautomate@birdzi.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">password</stringProp>
                  <stringProp name="Header.value">Shiv123!@#</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">zip</stringProp>
                  <stringProp name="Header.value">12345</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">phone</stringProp>
                  <stringProp name="Header.value">9029${__Random(1,999999,phone)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">birthdate</stringProp>
                  <stringProp name="Header.value">04/27/2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">yob</stringProp>
                  <stringProp name="Header.value">2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">loyaltyno</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">gender</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">code</stringProp>
                  <stringProp name="Header.value">Test2021</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">firstname</stringProp>
                  <stringProp name="Header.value">Perf</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">lastname</stringProp>
                  <stringProp name="Header.value">User</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">perf_anthem${__Random(1,9999999,email)}@birdzi.com</stringProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="user_email" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">user_email</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">,&quot;email&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
              <stringProp name="BoundaryExtractor.default">***Email not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="SessionKey" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">sessionkey</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;sessionKey&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;firstname</stringProp>
              <stringProp name="BoundaryExtractor.default">***session key not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustomerID" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">CustomerID</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***not found CustomerID***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="HomeStoreId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">HomeStoreId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;homeStoreId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***Home store ID not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="firstname" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">firstname</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;firstname&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***firstname not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="lastname" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">lastname</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;lastname&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***lastname not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="zip" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">zip</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;zip&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***zip not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="phone" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">phone</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;phone&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***phone not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="birthDate" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">birthDate</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;birthDate&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***birthDate not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="yob" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">yob</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;yob&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***yob not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">email_id=vars.get(&quot;email&quot;);
session_key=vars.get(&quot;sessionkey&quot;);
cust_id=vars.get(&quot;CustomerID&quot;);

FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/Register_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);
 out.write(email_id + &quot;,&quot; + session_key + &quot;,&quot; + cust_id);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetGameChallengeCount(On Successful registration following calls will be made for fetching and setting up essential data)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getgamechallengecount</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">2021-04-30 10:45:44  2021-23-30 11:23:30</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProfle(Fetch and save user data)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/getprofile</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">2337</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">2021-04-30 10:45:44  2021-23-30 11:23:30</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Female Gender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putprofile</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">email</stringProp>
                  <stringProp name="Header.value">${user_email}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">firstname</stringProp>
                  <stringProp name="Header.value">${firstname}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">lastname</stringProp>
                  <stringProp name="Header.value">${lastname}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">gender</stringProp>
                  <stringProp name="Header.value">F</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">zip</stringProp>
                  <stringProp name="Header.value">${zip}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">phone</stringProp>
                  <stringProp name="Header.value">${phone}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">birthdate</stringProp>
                  <stringProp name="Header.value">04/27/2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">yob</stringProp>
                  <stringProp name="Header.value">${yob}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">height</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">loyaltyno</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="skip 1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1006&quot;&#xd;
}]&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="skip 2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1006&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="skip 3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1006&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">cust_id=vars.get(&quot;CustomerID&quot;);
weekly_count=vars.get(&quot;weeklyCount_matchNr&quot;);
email=vars.get(&quot;user_email&quot;);



FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/Register_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);
 out.write(email+ &quot;,&quot; + weekly_count+ &quot;,&quot; +cust_id);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Dashboard" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getdashboard</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">2337</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Daily Aggregate" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getdailyaggregateslog</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">todaysdate</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">datefrom</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">dateto</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">2337</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getgamechallengecount" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getgamechallengecount</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="To complete ---- Log Something Challege for new user" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">timestamp</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily sleep Goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;10&quot;,&#xd;
  &quot;wellrested&quot; : &quot;${__V(sleep_option_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="To complete ---- Nutrition Survey Challenge for new user" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey -- Fetch nutrition survey list" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getsurvey</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveycode</stringProp>
                  <stringProp name="Header.value">NUTRITION</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="surveyId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">surveyId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;surveyId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***surveyId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey -- Submit survey response" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;questionId&quot;:45,&quot;choiceList&quot;:[{&quot;choiceId&quot;:217,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:46,&quot;choiceList&quot;:[{&quot;choiceId&quot;:221,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:222,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:223,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:47,&quot;choiceList&quot;:[{&quot;choiceId&quot;:228,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:229,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:259,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:48,&quot;choiceList&quot;:[{&quot;choiceId&quot;:262,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:263,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:241,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:49,&quot;choiceList&quot;:[{&quot;choiceId&quot;:264,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:245,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:50,&quot;choiceList&quot;:[{&quot;choiceId&quot;:250,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:251,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:51,&quot;choiceList&quot;:[{&quot;choiceId&quot;:255,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:256,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:52,&quot;choiceList&quot;:[{&quot;choiceId&quot;:230,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:266,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:53,&quot;choiceList&quot;:[{&quot;choiceId&quot;:238,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:239,&quot;data&quot;:&quot;&quot;}]}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/postsurveyresponse</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="surveyResponseId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">surveyResponseId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;surveyResponseId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">}</stringProp>
              <stringProp name="BoundaryExtractor.default">***surveyResponseId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveyid</stringProp>
                  <stringProp name="Header.value">${surveyId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey --  Get survey result response" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getsurveyresult</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveyid</stringProp>
                  <stringProp name="Header.value">${surveyId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveyresponseid</stringProp>
                  <stringProp name="Header.value">${surveyResponseId}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey --  Set goals from survey result screen" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;dimensionId&quot;:9,&quot;enabled&quot;:true,&quot;goals&quot;:[78,79,80,81,82],&quot;options&quot;:[]}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/putdimensiongoalsupsertall</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="false">
              <intProp name="groupSize">20</intProp>
              <longProp name="timeoutInMs">0</longProp>
            </SyncTimer>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Dashboard" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getdashboard</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">2337</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Daily Aggregate" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getdailyaggregateslog</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">todaysdate</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">datefrom</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">dateto</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">2337</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getgamechallengecount" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getgamechallengecount</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Game Challenge List" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getgamechallengelist</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.1.*.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">1 not found</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="2" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.2.*.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">2 not found</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">cust_id=vars.get(&quot;CustomerID&quot;);
email=vars.get(&quot;user_email&quot;);
daily=vars.get(&quot;1_matchNr&quot;);
weekly=vars.get(&quot;2_matchNr&quot;);


FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/ProdRegister_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);
 
out.write(email+ &quot;,&quot; + daily + &quot;,&quot; + weekly + &quot;,&quot; +cust_id);
 
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Anthem_UAT_API_Automation" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">20</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">120</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Android: HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">advertisingid</stringProp>
              <stringProp name="Header.value">C163ABE6-0AD6-4E5D-B4C9-92086283E3B3</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apikey</stringProp>
              <stringProp name="Header.value">KTJ9hVJTZdVyxZY4xjz5wnE1y8OGCwK65LFZxuaN6rF3HixTMpVg4Od9g9JH/g3zKUIRfnhLOPZ0k/phiRri6RYOby/28WztKpP21alfXeUT+rJb2gz3yamHiqxr69yF</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">appversioncode</stringProp>
              <stringProp name="Header.value">PWH v2.2.0-2</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">companyid</stringProp>
              <stringProp name="Header.value">5541</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceosversion</stringProp>
              <stringProp name="Header.value">9</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">devicetypecode</stringProp>
              <stringProp name="Header.value">ANDROID</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceToken</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">mac</stringProp>
              <stringProp name="Header.value">A0:C9:A0:C0:6C:6C</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="iOS: HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">advertisingid</stringProp>
              <stringProp name="Header.value">C4C0DDCB-18A9-4DCB-A368-281F70B9B9AB</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apikey</stringProp>
              <stringProp name="Header.value">KTJ9hVJTZdVyxZY4xjz5wnE1y8OGCwK65LFZxuaN6rF3HixTMpVg4Od9g9JH/g3zKUIRfnhLOPZ0k/phiRri6RYOby/28WztKpP21alfXeUT+rJb2gz3yamHiqxr69yF</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">appversioncode</stringProp>
              <stringProp name="Header.value">PWH v1.6.0-1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">companyid</stringProp>
              <stringProp name="Header.value">5541</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceosversion</stringProp>
              <stringProp name="Header.value">12.4.0</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">devicetypecode</stringProp>
              <stringProp name="Header.value">iOS</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceToken</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">mac</stringProp>
              <stringProp name="Header.value">a1:a1:a1:a1:a1:a1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Female Registration" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First screen" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/register</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">email</stringProp>
                  <stringProp name="Header.value">uat_anthem${__Random(1,9999999,email)}@birdzi.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">password</stringProp>
                  <stringProp name="Header.value">Shiv123!@#</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">zip</stringProp>
                  <stringProp name="Header.value">12345</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">phone</stringProp>
                  <stringProp name="Header.value">9029${__Random(1,999999,phone)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">birthdate</stringProp>
                  <stringProp name="Header.value">04/27/2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">yob</stringProp>
                  <stringProp name="Header.value">2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">loyaltyno</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">gender</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">code</stringProp>
                  <stringProp name="Header.value">Test2021</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">firstname</stringProp>
                  <stringProp name="Header.value">Perf</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">lastname</stringProp>
                  <stringProp name="Header.value">User</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">perf_anthem${__Random(1,9999999,email)}@birdzi.com</stringProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="email" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">email</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">,&quot;email&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
              <stringProp name="BoundaryExtractor.default">***Email not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="SessionKey" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">sessionkey</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;sessionKey&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;firstname</stringProp>
              <stringProp name="BoundaryExtractor.default">***session key not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustomerID" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">CustomerID</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***not found CustomerID***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="HomeStoreId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">HomeStoreId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;homeStoreId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***Home store ID not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="firstname" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">firstname</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;firstname&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***firstname not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="lastname" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">lastname</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;lastname&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***lastname not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="zip" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">zip</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;zip&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***zip not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="phone" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">phone</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;phone&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***phone not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="birthDate" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">birthDate</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;birthDate&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***birthDate not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="yob" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">yob</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;yob&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***yob not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">email_id=vars.get(&quot;email&quot;);
session_key=vars.get(&quot;sessionkey&quot;);
cust_id=vars.get(&quot;CustomerID&quot;);

FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/Register_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);
 out.write(email_id + &quot;,&quot; + session_key + &quot;,&quot; + cust_id);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetGameChallengeCount(On Successful registration following calls will be made for fetching and setting up essential data)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getgamechallengecount</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">2021-04-30 10:45:44  2021-23-30 11:23:30</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProfle(Fetch and save user data)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/getprofile</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">2021-04-30 10:45:44  2021-23-30 11:23:30</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Female Gender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putprofile</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">email</stringProp>
                  <stringProp name="Header.value">${email}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">firstname</stringProp>
                  <stringProp name="Header.value">${firstname}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">lastname</stringProp>
                  <stringProp name="Header.value">${lastname}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">gender</stringProp>
                  <stringProp name="Header.value">F</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">zip</stringProp>
                  <stringProp name="Header.value">${zip}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">phone</stringProp>
                  <stringProp name="Header.value">${phone}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">birthdate</stringProp>
                  <stringProp name="Header.value">04/27/2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">yob</stringProp>
                  <stringProp name="Header.value">${yob}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">height</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">loyaltyno</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="On Successful response make attribute update for Female" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1007&quot;&#xd;
}]&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Height/Weight" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putprofile</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">email</stringProp>
                  <stringProp name="Header.value">${email}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">firstname</stringProp>
                  <stringProp name="Header.value">${firstname}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">lastname</stringProp>
                  <stringProp name="Header.value">${lastname}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">gender</stringProp>
                  <stringProp name="Header.value">F</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">zip</stringProp>
                  <stringProp name="Header.value">${zip}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">phone</stringProp>
                  <stringProp name="Header.value">${phone}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">birthdate</stringProp>
                  <stringProp name="Header.value">04/30/2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">yob</stringProp>
                  <stringProp name="Header.value">${yob}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">height</stringProp>
                  <stringProp name="Header.value">5.4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">weight</stringProp>
                  <stringProp name="Header.value">{&quot;onboarding&quot;:&quot;yes&quot;,&quot;lbs&quot;:170}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">loyaltyno</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="How active are you?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
&quot;ConditionType&quot;:&quot;3&quot;,&#xd;
&quot;Condition&quot;:&quot;1007&quot;&#xd;
},&#xd;
&#xd;
{&#xd;
&quot;ConditionType&quot;:5,&#xd;
&quot;Condition&quot;:50001,&#xd;
&quot;Value&quot;:&quot;{Active}&quot;&#xd;
}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Select Each Statement that describes you best " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1007&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1001&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1004&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1005&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="What is your Hemoglobin A1C level?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;a1clevel&quot;:&quot;7.5&quot;,&quot;onboarding&quot;:&quot;yes&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">14</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">gzip;q=0,deflate,sdch          gzip, deflate</stringProp>
            </HeaderManager>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="TestPlan.comments">index 0=yes and index 1=no</stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="How many times do you test in a day?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;dimensionId&quot;:3,&quot;enabled&quot;:true,&quot;goals&quot;:[3]}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/putdimensiongoalsupsertall</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Connect Your Device" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/putgamificationevent</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">eventid</stringProp>
                  <stringProp name="Header.value">3</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Pregnancy" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1007&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1001&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1004&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1005&quot;},{&quot;ConditionType&quot;:5,&quot;Condition&quot;:50003,&quot;Value&quot;:&quot;{2021-09-30}&quot;},{&quot;ConditionType&quot;:5,&quot;Condition&quot;:50004,&quot;Value&quot;:&quot;{Male}&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Select Each Statement That Describes You Best" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1007&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1001&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1004&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1005&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="What do you care about when your food is Processed?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1007&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1001&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1004&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1005&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1022&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1023&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1013&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1021&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Artificial Ingredients &gt; Antibiotics Free ,  Artificial Color Free     Clean Label &gt; Added Sugar Free, All Natural
</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Which diets are you following?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1007&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1001&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1004&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1005&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1027&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1124&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1075&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1080&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1132&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1068&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1022&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1023&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1013&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1021&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Diet Programs &gt; Atkins Diet , Weight Watchers    Health Conscious Diets &gt; Low Fat ,  Low Sugar      Lifestyle Diets &gt; Ketogenic , Kosher
</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Do you have any allergies? " enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1007&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1001&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1004&quot;},{&quot;ConditionType&quot;:&quot;1&quot;,&quot;Condition&quot;:&quot;1005&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1036&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1051&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1029&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1035&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1027&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1124&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1075&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1080&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1132&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1068&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1022&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1023&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1013&quot;},{&quot;ConditionType&quot;:&quot;2&quot;,&quot;Condition&quot;:&quot;1021&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Allergens &gt; Egg Free , Fish Free               Intolerance &gt; Casein Free , Dairy Free
</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Thank you Screen" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/getattributes</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Sync app with all attributes updated in on-boarding process</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey -- Fetch nutrition survey list" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getsurvey</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveycode</stringProp>
                  <stringProp name="Header.value">NUTRITION</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="surveyId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">surveyId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;surveyId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***surveyId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey -- Submit survey response" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;questionId&quot;:45,&quot;choiceList&quot;:[{&quot;choiceId&quot;:217,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:46,&quot;choiceList&quot;:[{&quot;choiceId&quot;:221,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:222,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:223,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:47,&quot;choiceList&quot;:[{&quot;choiceId&quot;:228,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:229,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:259,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:48,&quot;choiceList&quot;:[{&quot;choiceId&quot;:262,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:263,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:241,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:49,&quot;choiceList&quot;:[{&quot;choiceId&quot;:264,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:245,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:50,&quot;choiceList&quot;:[{&quot;choiceId&quot;:250,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:251,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:51,&quot;choiceList&quot;:[{&quot;choiceId&quot;:255,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:256,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:52,&quot;choiceList&quot;:[{&quot;choiceId&quot;:230,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:266,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:53,&quot;choiceList&quot;:[{&quot;choiceId&quot;:238,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:239,&quot;data&quot;:&quot;&quot;}]}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/postsurveyresponse</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="surveyResponseId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">surveyResponseId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;surveyResponseId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">}</stringProp>
              <stringProp name="BoundaryExtractor.default">***surveyResponseId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveyid</stringProp>
                  <stringProp name="Header.value">${surveyId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey --  Get survey result response" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getsurveyresult</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveyid</stringProp>
                  <stringProp name="Header.value">${surveyId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveyresponseid</stringProp>
                  <stringProp name="Header.value">${surveyResponseId}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey --  Set goals from survey result screen" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;dimensionId&quot;:9,&quot;enabled&quot;:true,&quot;goals&quot;:[78,79,80,81,82],&quot;options&quot;:[]}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/putdimensiongoalsupsertall</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Turn Goals ON and set values for Dimension id 2(Blood Pressure)" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Turn ON Goals" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&#xd;
{&quot;dimensionId&quot;:2,&quot;enabled&quot;:true,&quot;goals&quot;:[1]}&#xd;
]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ssrapi/board/putdimensiongoalsupsertall</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dimensionid</stringProp>
                    <stringProp name="Header.value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sessionKey</stringProp>
                    <stringProp name="Header.value">${sessionkey}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">customerid</stringProp>
                    <stringProp name="Header.value">${CustomerID}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
              </HeaderManager>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">devicetimestamp</stringProp>
                    <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Add all widgets on Dashboard from EDIT" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Dashboard Widget List" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[[&quot;widgetId&quot;: &quot;15&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;1&quot;], [&quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;2&quot;, &quot;widgetId&quot;: &quot;1&quot;], [&quot;sequence&quot;: &quot;3&quot;, &quot;widgetId&quot;: &quot;2&quot;, &quot;isEnabled&quot;: true], [&quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;4&quot;, &quot;widgetId&quot;: &quot;13&quot;], [&quot;widgetId&quot;: &quot;12&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;5&quot;], [&quot;widgetId&quot;: &quot;5&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;6&quot;], [&quot;isEnabled&quot;: true, &quot;widgetId&quot;: &quot;4&quot;, &quot;sequence&quot;: &quot;7&quot;], [&quot;isEnabled&quot;: true, &quot;widgetId&quot;: &quot;6&quot;, &quot;sequence&quot;: &quot;8&quot;], [&quot;widgetId&quot;: &quot;8&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;9&quot;], [&quot;isEnabled&quot;: true, &quot;widgetId&quot;: &quot;9&quot;, &quot;sequence&quot;: &quot;10&quot;], [&quot;isEnabled&quot;: true, &quot;widgetId&quot;: &quot;10&quot;, &quot;sequence&quot;: &quot;11&quot;], [&quot;widgetId&quot;: &quot;14&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;12&quot;], [&quot;sequence&quot;: &quot;13&quot;, &quot;widgetId&quot;: &quot;3&quot;, &quot;isEnabled&quot;: true], [&quot;widgetId&quot;: &quot;7&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;14&quot;], [&quot;widgetId&quot;: &quot;11&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;15&quot;], [&quot;widgetId&quot;: &quot;16&quot;, &quot;isEnabled&quot;: true, &quot;sequence&quot;: &quot;16&quot;]]&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ssrapi/board/getdashboardwidgetlist</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sessionKey</stringProp>
                    <stringProp name="Header.value">${sessionkey}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">customerid</stringProp>
                    <stringProp name="Header.value">${CustomerID}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">storeid</stringProp>
                    <stringProp name="Header.value">${HomeStoreId}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add All Widgets on Dashboard" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[{&quot;widgetId&quot;:15,&quot;isEnabled&quot;:true,&quot;sequence&quot;:4},{&quot;widgetId&quot;:1,&quot;isEnabled&quot;:true,&quot;sequence&quot;:5},{&quot;widgetId&quot;:2,&quot;isEnabled&quot;:true,&quot;sequence&quot;:6},{&quot;widgetId&quot;:13,&quot;isEnabled&quot;:true,&quot;sequence&quot;:7},{&quot;widgetId&quot;:12,&quot;isEnabled&quot;:true,&quot;sequence&quot;:8},{&quot;widgetId&quot;:5,&quot;isEnabled&quot;:true,&quot;sequence&quot;:9},{&quot;widgetId&quot;:4,&quot;isEnabled&quot;:true,&quot;sequence&quot;:10},{&quot;widgetId&quot;:6,&quot;isEnabled&quot;:true,&quot;sequence&quot;:11},{&quot;widgetId&quot;:8,&quot;isEnabled&quot;:true,&quot;sequence&quot;:12},{&quot;widgetId&quot;:9,&quot;isEnabled&quot;:true,&quot;sequence&quot;:13},{&quot;widgetId&quot;:10,&quot;isEnabled&quot;:true,&quot;sequence&quot;:14},{&quot;widgetId&quot;:14,&quot;isEnabled&quot;:true,&quot;sequence&quot;:15},{&quot;widgetId&quot;:16,&quot;isEnabled&quot;:true,&quot;sequence&quot;:16},{&quot;widgetId&quot;:3,&quot;isEnabled&quot;:true,&quot;sequence&quot;:17},{&quot;widgetId&quot;:7,&quot;isEnabled&quot;:true,&quot;sequence&quot;:18},{&quot;widgetId&quot;:11,&quot;isEnabled&quot;:true,&quot;sequence&quot;:19}]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ssrapi/board/putdashboardwidgetupsert</stringProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sessionKey</stringProp>
                    <stringProp name="Header.value">${sessionkey}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">customerid</stringProp>
                    <stringProp name="Header.value">${CustomerID}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">storeid</stringProp>
                    <stringProp name="Header.value">${HomeStoreId}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/customers/login</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">email</stringProp>
                <stringProp name="Header.value">prijenkins@birdzi.com</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">password</stringProp>
                <stringProp name="Header.value">Shiv123!@#</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">email</stringProp>
                <stringProp name="Header.value">${email}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">password</stringProp>
                <stringProp name="Header.value">Shiv123!@#</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Email" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">user_email</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">,&quot;email&quot;:&quot;</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
            <stringProp name="BoundaryExtractor.default">***Email not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="SessionKey" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">sessionkey</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;sessionKey&quot;:&quot;</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;firstname</stringProp>
            <stringProp name="BoundaryExtractor.default">***session key not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustomerID" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">CustomerID</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot;:</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">***not found CustomerID***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="HomeStoreId" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">HomeStoreId</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;homeStoreId&quot;:</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">***Home store ID not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">Email=vars.get(&quot;user_email&quot;);

FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/Anthem/Result/Login_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);
 out.write(Email);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="100 Flawless Week" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="TestPlan.comments">A flawless week is per dimension.
So if you enter 7 days 100% for 7 dimensions you have 7 flawless weeks.</stringProp>
          <stringProp name="LoopController.loops">150</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Hydration logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ume&quot;: &quot;oz&quot;, &quot;quantity&quot;: 249&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Focus logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;minutes&quot;: 15&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Dimensions -&gt; WEIGHT(1), BLOODPRESSURE(2), GLUCOSE(3), ACTIVITY(4), FOCUS(5), HYDRATION(6), MEDS(7), SLEEP(8), NUTRITION(9) and MOOD(10)</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Activity logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: 20000, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Pressure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily sleep goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;14&quot;,&#xd;
  &quot;wellrested&quot; : &quot;${__V(sleep_option_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Daily Goals Acheived" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">timestamp</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
          </HeaderManager>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Daily Glucose Goals" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">3</stringProp>
          </LoopController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Sugar logs" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
	}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dimensionid</stringProp>
                    <stringProp name="Header.value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sessionKey</stringProp>
                    <stringProp name="Header.value">${sessionkey}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">customerid</stringProp>
                    <stringProp name="Header.value">${CustomerID}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
              </HeaderManager>
              <hashTree/>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="glu_1" elementType="Argument">
                    <stringProp name="Argument.name">glu_1</stringProp>
                    <stringProp name="Argument.value">pre</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_2" elementType="Argument">
                    <stringProp name="Argument.name">glu_2</stringProp>
                    <stringProp name="Argument.value">post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_3" elementType="Argument">
                    <stringProp name="Argument.name">glu_3</stringProp>
                    <stringProp name="Argument.value">fasting</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily sleep Goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;10&quot;,&#xd;
  &quot;wellrested&quot; : &quot;${__V(sleep_option_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,P5DT2H,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,P5DT2H,,)}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">Created to test a week challenge for sleep logs</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Nutrition Goals" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getnutritiongoalsquestion</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__timeShift(MM/dd/yyyy&apos; &apos;HH:mm:ss,,-P${__counter(,)}DT2M,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId1" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId1</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId2" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId2 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId3" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId3</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId3 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">3</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId4" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId4</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId4 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">4</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId5" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId5</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId5 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">5</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points1" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 1 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points2" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">2</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 2 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points3" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points3</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">3</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 3 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points4" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points4</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[1]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">4</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 4 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points5" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points5</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[1]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">5</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 5 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Nutrition Goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;answers&quot;:&#xd;
	[{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId1},&#xd;
		&quot;points&quot;:${points1},&#xd;
		&quot;answer&quot;:&quot;yes&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId2},&#xd;
		&quot;points&quot;:${points2},&#xd;
		&quot;answer&quot;:&quot;yes&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId3},&#xd;
		&quot;points&quot;:${points3},&#xd;
		&quot;answer&quot;:&quot;yes&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId4},&#xd;
		&quot;points&quot;:${points4},&#xd;
		&quot;answer&quot;:&quot;no&quot;&#xd;
	},&#xd;
&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId5},&#xd;
		&quot;points&quot;:${points5},&#xd;
		&quot;answer&quot;:&quot;no&quot;&#xd;
	}],&#xd;
&#xd;
&quot;points&quot;:${__intSum(${points1},${points2},${points3},${points4},${points5})}		&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">index 0=yes and index 1=no</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__timeShift(MM/dd/yyyy&apos; &apos;HH:mm:ss,,-P${__counter(,)}DT2M,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Hydration logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ume&quot;: &quot;oz&quot;, &quot;quantity&quot;: ${__Random(1,250,hyd_value)}&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Focus logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;minutes&quot;:&quot;${__Random(1,180,focus_value)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Dimensions -&gt; WEIGHT(1), BLOODPRESSURE(2), GLUCOSE(3), ACTIVITY(4), FOCUS(5), HYDRATION(6), MEDS(7), SLEEP(8), NUTRITION(9) and MOOD(10)</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Activity logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: &quot;10000&quot;, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Pressure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Awards --- 100 Nutrition logs" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">100</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Nutrition Goals" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getnutritiongoalsquestion</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__timeShift(MM/dd/yyyy&apos; &apos;HH:mm:ss,,-P${__counter(,)}DT2M,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId1" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId1</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId2" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId2 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId3" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId3</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId3 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">3</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId4" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId4</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId4 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">4</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId5" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId5</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId5 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">5</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points1" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 1 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points2" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">2</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 2 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points3" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points3</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">3</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 3 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points4" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points4</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[1]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">4</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 4 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points5" enabled="true">
              <stringProp name="TestPlan.comments">Identifies first value from array list

as required: First values is always = YES, second value is always = NO</stringProp>
              <stringProp name="JSONPostProcessor.referenceNames">points5</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[1]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">5</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 5 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;answers&quot;:&#xd;
	[{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId1},&#xd;
		&quot;points&quot;:${points1},&#xd;
		&quot;answer&quot;:&quot;yes&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId2},&#xd;
		&quot;points&quot;:${points2},&#xd;
		&quot;answer&quot;:&quot;yes&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId3},&#xd;
		&quot;points&quot;:${points3},&#xd;
		&quot;answer&quot;:&quot;yes&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId4},&#xd;
		&quot;points&quot;:${points4},&#xd;
		&quot;answer&quot;:&quot;no&quot;&#xd;
	},&#xd;
&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId5},&#xd;
		&quot;points&quot;:${points5},&#xd;
		&quot;answer&quot;:&quot;no&quot;&#xd;
	}],&#xd;
&#xd;
&quot;points&quot;:${__intSum(${points1},${points2},${points3},${points4},${points5})}		&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">index 0=yes and index 1=no</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__timeShift(MM/dd/yyyy&apos; &apos;HH:mm:ss,,-P${__counter(,)}DT2M,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Awards --- 100 Logs" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">100</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="100 Sleep logs" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;${__Random(1,24,sleep_value)}&quot;,&#xd;
  &quot;wellrested&quot; : &quot;${__V(sleep_option_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="100 Hydration logs" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ume&quot;: &quot;oz&quot;, &quot;quantity&quot;: ${__Random(1,250,hyd_value)}&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="100 Activity logs" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: &quot;${__Random(100,5000,steps_value)}&quot;, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="100 Blood Sugar logs" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
	}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="glu_1" elementType="Argument">
                  <stringProp name="Argument.name">glu_1</stringProp>
                  <stringProp name="Argument.value">pre</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_2" elementType="Argument">
                  <stringProp name="Argument.name">glu_2</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_3" elementType="Argument">
                  <stringProp name="Argument.name">glu_3</stringProp>
                  <stringProp name="Argument.value">fasting</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="100 Focus logs" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;minutes&quot;:&quot;${__Random(1,180,focus_value)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Dimensions -&gt; WEIGHT(1), BLOODPRESSURE(2), GLUCOSE(3), ACTIVITY(4), FOCUS(5), HYDRATION(6), MEDS(7), SLEEP(8), NUTRITION(9) and MOOD(10)</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="100 Blood Pressure---- Health log" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Awards --- 100 Health Logs " enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">100</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">timestamp</stringProp>
                <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(101,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Blood Pressure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Blood Sugar logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
	}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="glu_1" elementType="Argument">
                  <stringProp name="Argument.name">glu_1</stringProp>
                  <stringProp name="Argument.value">pre</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_2" elementType="Argument">
                  <stringProp name="Argument.name">glu_2</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_3" elementType="Argument">
                  <stringProp name="Argument.name">glu_3</stringProp>
                  <stringProp name="Argument.value">fasting</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Medication --- Incomplete" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="glu_1" elementType="Argument">
                  <stringProp name="Argument.name">glu_1</stringProp>
                  <stringProp name="Argument.value">pre</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_2" elementType="Argument">
                  <stringProp name="Argument.name">glu_2</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_3" elementType="Argument">
                  <stringProp name="Argument.name">glu_3</stringProp>
                  <stringProp name="Argument.value">fasting</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">advertisingid</stringProp>
                  <stringProp name="Header.value">C4C0DDCB-18A9-4DCB-A368-281F70B9B9AB</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">apikey</stringProp>
                  <stringProp name="Header.value">KTJ9hVJTZdVyxZY4xjz5wnE1y8OGCwK65LFZxuaN6rF3HixTMpVg4Od9g9JH/g3zKUIRfnhLOPZ0k/phiRri6RYOby/28WztKpP21alfXeUT+rJb2gz3yamHiqxr69yF</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">appversioncode</stringProp>
                  <stringProp name="Header.value">PWH v1.6.0-1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">companyid</stringProp>
                  <stringProp name="Header.value">5541</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">deviceosversion</stringProp>
                  <stringProp name="Header.value">12.4.0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetypecode</stringProp>
                  <stringProp name="Header.value">iOS</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">deviceToken</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">mac</stringProp>
                  <stringProp name="Header.value">a1:a1:a1:a1:a1:a1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(MM/dd/yyyy&apos; &apos;HH:mm:ss,,-P${__counter(,)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(MM/dd/yyyy&apos; &apos;HH:mm:ss,,-P${__counter(,)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}   ${__timeShift(dd-MM-yyyy,,-P${__counter(,)}D,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept-encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}   ${__timeShift(dd-MM-yyyy,,-P${__counter(,)}D,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Awards --- Single Action" enabled="false"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Complete A 5k" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: &quot;5962&quot;, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Activities by Steps/Miles/Time" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">dimensionid</stringProp>
                <stringProp name="Header.value">4</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionKey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerid</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Activities by Steps" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: &quot;${__Random(100,5000,steps_value)}&quot;, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Activities by Miles" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: &quot;${__Random(100,5000,steps_value)}&quot;, &#xd;
	&quot;ume&quot;: &quot;miles&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Activities by Time" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: &quot;10&quot;, &#xd;
	&quot;ume&quot;: &quot;minutes&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/customers/logout</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerid</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Single Action for Weight and A1C" enabled="false"/>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">timestamp</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}   ${__timeShift(dd-MM-yyyy,,-P${__counter(,)}D,,)}</stringProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="A1C" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;a1clevel&quot;: &quot;${__groovy(new java.text.DecimalFormat(&apos;0.#&apos;).format(Math.ceil(org.apache.commons.lang3.RandomUtils.nextFloat(4.1f\, 15f) * 2) / 2),)}&quot;&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">14</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Weight" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;lbs&quot;:&quot;${__Random(1,999,weight_value)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="First Flawless All Pillars(all 7 dimenstion in a week)" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">20</stringProp>
        </LoopController>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Blood Sugar logs" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Blood Sugar logs" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">devicetimestamp</stringProp>
                    <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dimensionid</stringProp>
                    <stringProp name="Header.value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sessionKey</stringProp>
                    <stringProp name="Header.value">${sessionkey}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">customerid</stringProp>
                    <stringProp name="Header.value">${CustomerID}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
              </HeaderManager>
              <hashTree/>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="glu_1" elementType="Argument">
                    <stringProp name="Argument.name">glu_1</stringProp>
                    <stringProp name="Argument.value">pre</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_2" elementType="Argument">
                    <stringProp name="Argument.name">glu_2</stringProp>
                    <stringProp name="Argument.value">post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_3" elementType="Argument">
                    <stringProp name="Argument.name">glu_3</stringProp>
                    <stringProp name="Argument.value">fasting</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Blood Sugar logs" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">devicetimestamp</stringProp>
                    <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dimensionid</stringProp>
                    <stringProp name="Header.value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sessionKey</stringProp>
                    <stringProp name="Header.value">${sessionkey}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">customerid</stringProp>
                    <stringProp name="Header.value">${CustomerID}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
              </HeaderManager>
              <hashTree/>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="glu_1" elementType="Argument">
                    <stringProp name="Argument.name">glu_1</stringProp>
                    <stringProp name="Argument.value">pre</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_2" elementType="Argument">
                    <stringProp name="Argument.name">glu_2</stringProp>
                    <stringProp name="Argument.value">post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_3" elementType="Argument">
                    <stringProp name="Argument.name">glu_3</stringProp>
                    <stringProp name="Argument.value">fasting</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Blood Sugar logs" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">devicetimestamp</stringProp>
                    <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">timestamp</stringProp>
                    <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dimensionid</stringProp>
                    <stringProp name="Header.value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sessionKey</stringProp>
                    <stringProp name="Header.value">${sessionkey}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">customerid</stringProp>
                    <stringProp name="Header.value">${CustomerID}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
              </HeaderManager>
              <hashTree/>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="glu_1" elementType="Argument">
                    <stringProp name="Argument.name">glu_1</stringProp>
                    <stringProp name="Argument.value">pre</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_2" elementType="Argument">
                    <stringProp name="Argument.name">glu_2</stringProp>
                    <stringProp name="Argument.value">post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_3" elementType="Argument">
                    <stringProp name="Argument.name">glu_3</stringProp>
                    <stringProp name="Argument.value">fasting</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Hydration logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ume&quot;: &quot;oz&quot;, &quot;quantity&quot;: &quot;100&quot;&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Focus logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;minutes&quot;:&quot;10&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Dimensions -&gt; WEIGHT(1), BLOODPRESSURE(2), GLUCOSE(3), ACTIVITY(4), FOCUS(5), HYDRATION(6), MEDS(7), SLEEP(8), NUTRITION(9) and MOOD(10)</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Activity logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: &quot;10000&quot;, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Blood Pressure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sleep goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;8&quot;,&#xd;
  &quot;wellrested&quot; : &quot;yes&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Nutrition Goals" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getnutritiongoalsquestion</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}   ${__timeShift(dd-MM-yyyy,,-P${__counter(,)}D,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId1" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId1</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId2" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId2 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId3" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId3</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId3 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">3</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId4" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId4</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId4 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">4</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId5" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId5</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId5 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">5</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points1" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points1</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points1 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points2" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points2 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points3" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points3</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points3 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">3</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points4" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points4</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points4 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">4</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points5" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points5</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points5 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">5</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;answers&quot;:&#xd;
	[{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId1},&#xd;
		&quot;points&quot;:${points1},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId2},&#xd;
		&quot;points&quot;:${points2},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId3},&#xd;
		&quot;points&quot;:${points3},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId4},&#xd;
		&quot;points&quot;:${points4},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId5},&#xd;
		&quot;points&quot;:${points5},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	}],&#xd;
&#xd;
&quot;points&quot;:${__intSum(${points1},${points2},${points3},${points4},${points5})}		&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">index 0=yes and index 1=no</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="nutri_option_1" elementType="Argument">
                  <stringProp name="Argument.name">nutri_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nutri_option_2" elementType="Argument">
                  <stringProp name="Argument.name">nutri_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}   ${__timeShift(dd-MM-yyyy,,-P${__counter(,)}D,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="10th Flawless Week" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="TestPlan.comments">A flawless week is per dimension.
So if you enter 7 days 100% for 5 dimensions you have 5 flawless weeks.</stringProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Sugar logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="glu_1" elementType="Argument">
                  <stringProp name="Argument.name">glu_1</stringProp>
                  <stringProp name="Argument.value">pre</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_2" elementType="Argument">
                  <stringProp name="Argument.name">glu_2</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_3" elementType="Argument">
                  <stringProp name="Argument.name">glu_3</stringProp>
                  <stringProp name="Argument.value">fasting</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Hydration logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ume&quot;: &quot;oz&quot;, &quot;quantity&quot;: 249&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Focus logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;minutes&quot;: 15&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Dimensions -&gt; WEIGHT(1), BLOODPRESSURE(2), GLUCOSE(3), ACTIVITY(4), FOCUS(5), HYDRATION(6), MEDS(7), SLEEP(8), NUTRITION(9) and MOOD(10)</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Activity logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: 20000, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Pressure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily sleep goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;14&quot;,&#xd;
  &quot;wellrested&quot; : &quot;${__V(sleep_option_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(11,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="50th Flawless Week" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="TestPlan.comments">A flawless week is per dimension.
So if you enter 7 days 100% for 5 dimensions you have 5 flawless weeks.</stringProp>
          <stringProp name="LoopController.loops">50</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Sugar logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">3</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="glu_1" elementType="Argument">
                  <stringProp name="Argument.name">glu_1</stringProp>
                  <stringProp name="Argument.value">pre</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_2" elementType="Argument">
                  <stringProp name="Argument.name">glu_2</stringProp>
                  <stringProp name="Argument.value">post</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="glu_3" elementType="Argument">
                  <stringProp name="Argument.name">glu_3</stringProp>
                  <stringProp name="Argument.value">fasting</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Hydration logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ume&quot;: &quot;oz&quot;, &quot;quantity&quot;: 249&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Focus logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;minutes&quot;: 15&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Dimensions -&gt; WEIGHT(1), BLOODPRESSURE(2), GLUCOSE(3), ACTIVITY(4), FOCUS(5), HYDRATION(6), MEDS(7), SLEEP(8), NUTRITION(9) and MOOD(10)</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Activity logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: 20000, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Pressure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily sleep goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;14&quot;,&#xd;
  &quot;wellrested&quot; : &quot;${__V(sleep_option_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(51,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="100 Flawless Week" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="TestPlan.comments">A flawless week is per dimension.
So if you enter 7 days 100% for 7 dimensions you have 7 flawless weeks.</stringProp>
          <stringProp name="LoopController.loops">150</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Hydration logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ume&quot;: &quot;oz&quot;, &quot;quantity&quot;: 249&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Focus logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;minutes&quot;: 15&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Dimensions -&gt; WEIGHT(1), BLOODPRESSURE(2), GLUCOSE(3), ACTIVITY(4), FOCUS(5), HYDRATION(6), MEDS(7), SLEEP(8), NUTRITION(9) and MOOD(10)</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Activity logs" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: 20000, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily Blood Pressure" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily sleep goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;14&quot;,&#xd;
  &quot;wellrested&quot; : &quot;${__V(sleep_option_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(151,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Anthem UAT --- Extract no. of Daily and Weekly challenges shown to users" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="TestPlan.comments">1. Create new user and skip all onboarding screens
2. Now, log data and complete nutrition survey to complete new user challenges
3. Go to Dashboard to fetch all stats(necessary step as challenges wont appear unless dashboard notification appears)
4. Check Challenges screen for Weekly and Daily challenges(Weekly challenge always must be 1 per week)

Note: 
1. Sync timer is added to game challenge list so that it hits in same ms for all users
2. Multiple times dashboard and aggregate api is called to get proper stats</stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Android: HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">advertisingid</stringProp>
              <stringProp name="Header.value">96B95601-CB58-4667-94D8-C8B5B39CD644</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apikey</stringProp>
              <stringProp name="Header.value">KhhiYqz7cxPQ11n4m0DMgkUE+syU+nre6Rcp7UOvHpgu/QJ8LoVn71b6zt6uxwF/K9z5lqPTCMj/WGTITfSVXAJecGGYmfDfmbd63MA3O5akmWg+PLLtFreTSe3Tj0F+</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">appversioncode</stringProp>
              <stringProp name="Header.value">DTC v1.5.0-2</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">companyid</stringProp>
              <stringProp name="Header.value">5541</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceosversion</stringProp>
              <stringProp name="Header.value">9</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">devicetypecode</stringProp>
              <stringProp name="Header.value">ANDROID</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceToken</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">mac</stringProp>
              <stringProp name="Header.value">20:A6:0C:F7:D9:BA</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">sessionKey</stringProp>
              <stringProp name="Header.value">API</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="iOS: HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">advertisingid</stringProp>
              <stringProp name="Header.value">C4C0DDCB-18A9-4DCB-A368-281F70B9B9AB</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apikey</stringProp>
              <stringProp name="Header.value">KTJ9hVJTZdVyxZY4xjz5wnE1y8OGCwK65LFZxuaN6rF3HixTMpVg4Od9g9JH/g3zKUIRfnhLOPZ0k/phiRri6RYOby/28WztKpP21alfXeUT+rJb2gz3yamHiqxr69yF</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">appversioncode</stringProp>
              <stringProp name="Header.value">PWH v1.6.0-1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">companyid</stringProp>
              <stringProp name="Header.value">5541</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceosversion</stringProp>
              <stringProp name="Header.value">12.4.0</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">devicetypecode</stringProp>
              <stringProp name="Header.value">iOS</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceToken</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">mac</stringProp>
              <stringProp name="Header.value">a1:a1:a1:a1:a1:a1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="Female Registration" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="First screen" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/register</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">email</stringProp>
                  <stringProp name="Header.value">perf_anthem${__Random(1,9999999,email)}@birdzi.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">password</stringProp>
                  <stringProp name="Header.value">Shiv123!@#</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">zip</stringProp>
                  <stringProp name="Header.value">12345</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">phone</stringProp>
                  <stringProp name="Header.value">9029${__Random(1,999999,phone)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">birthdate</stringProp>
                  <stringProp name="Header.value">04/27/2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">yob</stringProp>
                  <stringProp name="Header.value">2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">loyaltyno</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">gender</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">code</stringProp>
                  <stringProp name="Header.value">Test2021</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">firstname</stringProp>
                  <stringProp name="Header.value">Perf</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">lastname</stringProp>
                  <stringProp name="Header.value">User</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">perf_anthem${__Random(1,9999999,email)}@birdzi.com</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">email</stringProp>
                  <stringProp name="Header.value">anthemautomate@birdzi.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">password</stringProp>
                  <stringProp name="Header.value">Shiv123!@#</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">zip</stringProp>
                  <stringProp name="Header.value">12345</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">phone</stringProp>
                  <stringProp name="Header.value">9029${__Random(1,999999,phone)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">birthdate</stringProp>
                  <stringProp name="Header.value">04/27/2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">yob</stringProp>
                  <stringProp name="Header.value">2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">loyaltyno</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">gender</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">code</stringProp>
                  <stringProp name="Header.value">Test2021</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">firstname</stringProp>
                  <stringProp name="Header.value">Perf</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">lastname</stringProp>
                  <stringProp name="Header.value">User</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">perf_anthem${__Random(1,9999999,email)}@birdzi.com</stringProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="user_email" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">user_email</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">,&quot;email&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
              <stringProp name="BoundaryExtractor.default">***Email not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="SessionKey" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">sessionkey</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;sessionKey&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;firstname</stringProp>
              <stringProp name="BoundaryExtractor.default">***session key not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustomerID" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">CustomerID</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***not found CustomerID***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="HomeStoreId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">HomeStoreId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;homeStoreId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***Home store ID not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="firstname" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">firstname</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;firstname&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***firstname not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="lastname" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">lastname</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;lastname&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***lastname not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="zip" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">zip</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;zip&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***zip not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="phone" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">phone</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;phone&quot;:&quot;</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***phone not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="birthDate" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">birthDate</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;birthDate&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***birthDate not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="yob" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">yob</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;yob&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***yob not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">email_id=vars.get(&quot;email&quot;);
session_key=vars.get(&quot;sessionkey&quot;);
cust_id=vars.get(&quot;CustomerID&quot;);

FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/Register_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);
 out.write(email_id + &quot;,&quot; + session_key + &quot;,&quot; + cust_id);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetGameChallengeCount(On Successful registration following calls will be made for fetching and setting up essential data)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getgamechallengecount</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">2021-04-30 10:45:44  2021-23-30 11:23:30</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetProfle(Fetch and save user data)" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/getprofile</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">2337</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">2021-04-30 10:45:44  2021-23-30 11:23:30</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Female Gender" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putprofile</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">email</stringProp>
                  <stringProp name="Header.value">${user_email}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">firstname</stringProp>
                  <stringProp name="Header.value">${firstname}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">lastname</stringProp>
                  <stringProp name="Header.value">${lastname}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">gender</stringProp>
                  <stringProp name="Header.value">F</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">zip</stringProp>
                  <stringProp name="Header.value">${zip}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">phone</stringProp>
                  <stringProp name="Header.value">${phone}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">birthdate</stringProp>
                  <stringProp name="Header.value">04/27/2001</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">yob</stringProp>
                  <stringProp name="Header.value">${yob}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">height</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">loyaltyno</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="skip 1" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&#xd;
	&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1006&quot;&#xd;
}]&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="skip 2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1006&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="skip 3" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;ConditionType&quot;:&quot;3&quot;,&quot;Condition&quot;:&quot;1006&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/customers/putattributes</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">cust_id=vars.get(&quot;CustomerID&quot;);
weekly_count=vars.get(&quot;weeklyCount_matchNr&quot;);
email=vars.get(&quot;user_email&quot;);



FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/Register_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);
 out.write(email+ &quot;,&quot; + weekly_count+ &quot;,&quot; +cust_id);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Dashboard" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getdashboard</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">2337</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Daily Aggregate" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getdailyaggregateslog</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">todaysdate</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">datefrom</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">dateto</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">2337</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getgamechallengecount" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getgamechallengecount</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="To complete ---- Log Something Challege for new user" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">timestamp</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}</stringProp>
          </HeaderManager>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Daily sleep Goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;10&quot;,&#xd;
  &quot;wellrested&quot; : &quot;${__V(sleep_option_${__Random(1,3,)})}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="To complete ---- Nutrition Survey Challenge for new user" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey -- Fetch nutrition survey list" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getsurvey</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveycode</stringProp>
                  <stringProp name="Header.value">NUTRITION</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="surveyId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">surveyId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;surveyId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***surveyId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey -- Submit survey response" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;questionId&quot;:45,&quot;choiceList&quot;:[{&quot;choiceId&quot;:217,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:46,&quot;choiceList&quot;:[{&quot;choiceId&quot;:221,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:222,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:223,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:47,&quot;choiceList&quot;:[{&quot;choiceId&quot;:228,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:229,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:259,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:48,&quot;choiceList&quot;:[{&quot;choiceId&quot;:262,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:263,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:241,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:49,&quot;choiceList&quot;:[{&quot;choiceId&quot;:264,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:245,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:50,&quot;choiceList&quot;:[{&quot;choiceId&quot;:250,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:251,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:51,&quot;choiceList&quot;:[{&quot;choiceId&quot;:255,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:256,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:52,&quot;choiceList&quot;:[{&quot;choiceId&quot;:230,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:266,&quot;data&quot;:&quot;&quot;}]},{&quot;questionId&quot;:53,&quot;choiceList&quot;:[{&quot;choiceId&quot;:238,&quot;data&quot;:&quot;&quot;},{&quot;choiceId&quot;:239,&quot;data&quot;:&quot;&quot;}]}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/postsurveyresponse</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="surveyResponseId" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">surveyResponseId</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;surveyResponseId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">}</stringProp>
              <stringProp name="BoundaryExtractor.default">***surveyResponseId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveyid</stringProp>
                  <stringProp name="Header.value">${surveyId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey --  Get survey result response" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getsurveyresult</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveyid</stringProp>
                  <stringProp name="Header.value">${surveyId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">surveyresponseid</stringProp>
                  <stringProp name="Header.value">${surveyResponseId}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Survey --  Set goals from survey result screen" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;dimensionId&quot;:9,&quot;enabled&quot;:true,&quot;goals&quot;:[78,79,80,81,82],&quot;options&quot;:[]}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/putdimensiongoalsupsertall</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="false">
              <intProp name="groupSize">100</intProp>
              <longProp name="timeoutInMs">0</longProp>
            </SyncTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Dashboard" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getdashboard</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">2337</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Daily Aggregate" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getdailyaggregateslog</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">todaysdate</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">datefrom</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">dateto</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">2337</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getgamechallengecount" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getgamechallengecount</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="false">
            <intProp name="groupSize">100</intProp>
            <longProp name="timeoutInMs">0</longProp>
          </SyncTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Game Challenge List" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getgamechallengelist</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.1.*.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">1 not found</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="2" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.2.*.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">2 not found</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">cust_id=vars.get(&quot;CustomerID&quot;);
email=vars.get(&quot;user_email&quot;);
daily=vars.get(&quot;1_matchNr&quot;);
weekly=vars.get(&quot;2_matchNr&quot;);


FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/UATRegister_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);

 out.write(email+ &quot;,&quot; + daily + &quot;,&quot; + weekly + &quot;,&quot; +cust_id);
 
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Dumps" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Android: HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">advertisingid</stringProp>
              <stringProp name="Header.value">C163ABE6-0AD6-4E5D-B4C9-92086283E3B3</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apikey</stringProp>
              <stringProp name="Header.value">KTJ9hVJTZdVyxZY4xjz5wnE1y8OGCwK65LFZxuaN6rF3HixTMpVg4Od9g9JH/g3zKUIRfnhLOPZ0k/phiRri6RYOby/28WztKpP21alfXeUT+rJb2gz3yamHiqxr69yF</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">appversioncode</stringProp>
              <stringProp name="Header.value">PWH v2.2.0-2</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">companyid</stringProp>
              <stringProp name="Header.value">5541</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceosversion</stringProp>
              <stringProp name="Header.value">9</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">devicetypecode</stringProp>
              <stringProp name="Header.value">ANDROID</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceToken</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">mac</stringProp>
              <stringProp name="Header.value">A0:C9:A0:C0:6C:6C</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/customers/login</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/Register_20210511-151817.csv</stringProp>
            <boolProp name="ignoreFirstLine">false</boolProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">email</stringProp>
          </CSVDataSet>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">email</stringProp>
                <stringProp name="Header.value">dummy23@birdzi.com</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">password</stringProp>
                <stringProp name="Header.value">Shiv123!@#</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">email</stringProp>
                <stringProp name="Header.value">${email}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">password</stringProp>
                <stringProp name="Header.value">Shiv123!@#</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="user_email" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">user_email</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">,&quot;email&quot;:&quot;</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
            <stringProp name="BoundaryExtractor.default">***Email not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="SessionKey" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">sessionkey</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;sessionKey&quot;:&quot;</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;firstname</stringProp>
            <stringProp name="BoundaryExtractor.default">***session key not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustomerID" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">CustomerID</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot;:</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">***not found CustomerID***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="HomeStoreId" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">HomeStoreId</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;homeStoreId&quot;:</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">***Home store ID not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">cust_id=vars.get(&quot;CustomerID&quot;);
weekly_count=vars.get(&quot;weeklyCount_matchNr&quot;);
email=vars.get(&quot;user_email&quot;);



FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/Register_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);
 out.write(email+ &quot;,&quot; + weekly_count+ &quot;,&quot; +cust_id);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="false">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">cust_id=vars.get(&quot;CustomerID&quot;);
weekly_count=vars.get(&quot;weeklyCount_matchNr&quot;);
email=vars.get(&quot;user_email&quot;);



FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/Register_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);
 out.write(email+ &quot;,&quot; + weekly_count+ &quot;,&quot; +cust_id);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Goals  ---- Sum added was of Array&apos;s 1 value" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;answers&quot;:&#xd;
	[{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId1},&#xd;
		&quot;points&quot;:${__Random(0,1,val_1)},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId2},&#xd;
		&quot;points&quot;:${__Random(0,1,val_2)},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId3},&#xd;
		&quot;points&quot;:${__Random(0,1,val_3)},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId4},&#xd;
		&quot;points&quot;:${__Random(0,1,val_4)},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId5},&#xd;
		&quot;points&quot;:${__Random(0,1,val_5)},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	}],&#xd;
&#xd;
&quot;points&quot;:${__intSum(${val_1},${val_2},${val_3},${val_4},${val_5})}&#xd;
&#xd;
		&#xd;
&#xd;
}&#xd;
&#xd;
&#xd;
&#xd;
&#xd;
//${payload}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">index 0=yes and index 1=no</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerid</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">dimensionid</stringProp>
                <stringProp name="Header.value">9</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="nutri_option_1" elementType="Argument">
                <stringProp name="Argument.name">nutri_option_1</stringProp>
                <stringProp name="Argument.value">yes</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="nutri_option_2" elementType="Argument">
                <stringProp name="Argument.name">nutri_option_2</stringProp>
                <stringProp name="Argument.value">no</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Nutrition Goals" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getnutritiongoalsquestion</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerid</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId1" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">goalQuestionId1</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">***goalQuestionId not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId2" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">goalQuestionId2</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">***goalQuestionId2 not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">2</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId3" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">goalQuestionId3</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">***goalQuestionId3 not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">3</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId4" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">goalQuestionId4</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">***goalQuestionId4 not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">4</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId5" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">goalQuestionId5</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">***goalQuestionId5 not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">5</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points1" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">points1</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">***points1 not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points2" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">points2</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">***points2 not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">2</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points3" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">points3</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">***points3 not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">3</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points4" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">points4</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">***points4 not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">4</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points5" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">points5</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
            <stringProp name="BoundaryExtractor.default">***points5 not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">5</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="false">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">log.info(&apos;Response: &apos; + prev.getResponseDataAsString())
def sum = 0
(prev.getResponseDataAsString() =~ /\[(\d+),/).eachWithIndex { match, idx -&gt;
    log.info(&apos;Match # &apos; + idx + &apos;, extracted number: &apos; + match[1] + &apos; from &apos; + match)
    sum += match[1] as int
}
log.info(&apos;Sum of extracted values: &apos; + sum)

vars.put(&apos;payload&apos;, &quot;\&quot;points\&quot;: &quot;+sum)

log.info(&apos;Generated payload:\n&apos; + vars.get(&apos;payload&apos;))</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="First Flawless All Pillars(all 7 dimenstion in a week)  ${__timeShift(yyyy-MM-dd HH:mm:ss,,-P20DT2M,,)}" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">3</stringProp>
        </LoopController>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P20DT2M,,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">timestamp</stringProp>
                <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P20DT2M,,)}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">${__timeShift(${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)},,,,date_val)}</stringProp>
          </HeaderManager>
          <hashTree/>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">3</stringProp>
          </LoopController>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Blood Sugar logs ${counter_val}" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{  &#xd;
	&quot;ume&quot; : &quot;mg/dL&quot;,  &#xd;
	&quot;sugarlevel&quot; : &quot;${__Random(70,400,glucose_value)}&quot;,  &#xd;
	&quot;meal&quot; : &quot;${__V(glu_${__Random(1,3,)})}&quot;&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">dimensionid</stringProp>
                    <stringProp name="Header.value">3</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">sessionKey</stringProp>
                    <stringProp name="Header.value">${sessionkey}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">customerid</stringProp>
                    <stringProp name="Header.value">${CustomerID}</stringProp>
                  </elementProp>
                </collectionProp>
                <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
              </HeaderManager>
              <hashTree/>
              <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="glu_1" elementType="Argument">
                    <stringProp name="Argument.name">glu_1</stringProp>
                    <stringProp name="Argument.value">pre</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_2" elementType="Argument">
                    <stringProp name="Argument.name">glu_2</stringProp>
                    <stringProp name="Argument.value">post</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="glu_3" elementType="Argument">
                    <stringProp name="Argument.name">glu_3</stringProp>
                    <stringProp name="Argument.value">fasting</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </Arguments>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Hydration logs" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;ume&quot;: &quot;oz&quot;, &quot;quantity&quot;: &quot;100&quot;&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">6</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Focus logs" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;minutes&quot;:&quot;10&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Dimensions -&gt; WEIGHT(1), BLOODPRESSURE(2), GLUCOSE(3), ACTIVITY(4), FOCUS(5), HYDRATION(6), MEDS(7), SLEEP(8), NUTRITION(9) and MOOD(10)</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">5</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Activity logs" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;quantity&quot;: &quot;10000&quot;, &#xd;
	&quot;ume&quot;: &quot;steps&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Blood Pressure" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;systolic&quot;:&quot;${__Random(30,250)}&quot;,&quot;diastolic&quot;:&quot;${__Random(30,250)}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">2</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="sleep goals" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;hours&quot; : &quot;8&quot;,&#xd;
  &quot;wellrested&quot; : &quot;yes&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sleep_option_1" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_2" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sleep_option_3" elementType="Argument">
                  <stringProp name="Argument.name">sleep_option_3</stringProp>
                  <stringProp name="Argument.value">skip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionKey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">uatnew@birdzi.com/Bug123!@# and its customer ID is 1001029688</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Nutrition Goals" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getnutritiongoalsquestion</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}   ${__timeShift(dd-MM-yyyy,,-P${__counter(,)}D,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId1" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId1</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId2" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId2 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId3" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId3</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId3 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">3</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId4" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId4</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId4 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">4</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId5" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId5</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId5 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">5</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points1" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points1</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points1 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points2" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points2 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points3" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points3</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points3 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">3</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points4" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points4</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points4 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">4</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points5" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points5</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points5 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">5</stringProp>
            </BoundaryExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Goals" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;answers&quot;:&#xd;
	[{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId1},&#xd;
		&quot;points&quot;:${points1},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId2},&#xd;
		&quot;points&quot;:${points2},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId3},&#xd;
		&quot;points&quot;:${points3},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId4},&#xd;
		&quot;points&quot;:${points4},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	},&#xd;
&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId5},&#xd;
		&quot;points&quot;:${points5},&#xd;
		&quot;answer&quot;:&quot;${__V(nutri_option_${__Random(1,2,)})}&quot;&#xd;
	}],&#xd;
&#xd;
&quot;points&quot;:${__intSum(${points1},${points2},${points3},${points4},${points5})}		&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">index 0=yes and index 1=no</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="nutri_option_1" elementType="Argument">
                  <stringProp name="Argument.name">nutri_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nutri_option_2" elementType="Argument">
                  <stringProp name="Argument.name">nutri_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__time(MM/dd/yyyy&apos; &apos;HH:mm:ss,)}   ${__timeShift(dd-MM-yyyy,,-P${__counter(,)}D,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(21,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="false">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">email=vars.get(&quot;user_email&quot;);

FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/Anthem/Result/Login_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);
 out.write(email);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="false">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">cust_id=vars.get(&quot;CustomerID&quot;);
weekly_count=vars.get(&quot;weeklyCount_matchNr&quot;);

FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/Register_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);
 out.write(cust_id+ &quot;,&quot; + weekly_count);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="weeklyCount" enabled="false">
          <stringProp name="JSONPostProcessor.referenceNames">weeklyCount</stringProp>
          <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.2.*.id</stringProp>
          <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          <stringProp name="JSONPostProcessor.defaultValues">weekly count not found</stringProp>
        </JSONPostProcessor>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="false">
          <stringProp name="WhileController.condition">${__groovy((vars.get(&apos;1_matchNr&apos;) ?: 0  as int) == 0 &amp;&amp; (vars.get(&apos;2_matchNr&apos;) ?: 0  as int) == 0,)}</stringProp>
        </WhileController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Game Challenge List" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getgamechallengelist</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerId</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">storeid</stringProp>
                  <stringProp name="Header.value">${HomeStoreId}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="weeklyCount" enabled="false">
              <stringProp name="JSONPostProcessor.referenceNames">weeklyCount</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.2.*.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">weekly count not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.1.*.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">1 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="2" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.2.*.id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">2 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="true">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">cust_id=vars.get(&quot;CustomerID&quot;);
email=vars.get(&quot;user_email&quot;);
one=vars.get(&quot;1_matchNr&quot;);
two=vars.get(&quot;2_matchNr&quot;);


FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/Register_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);

 out.write(email+ &quot;,&quot; + one + &quot;,&quot; + two + &quot;,&quot; +cust_id);
 
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Awards --- 100 Nutrition logs" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Nutrition Goals" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/getnutritiongoalsquestion</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">//https://ssrapi-uat.birdzi.com/ssrapi  UAT and ssrapi.birdzi.com Prod</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__timeShift(MM/dd/yyyy&apos; &apos;HH:mm:ss,,-P${__counter(,)}DT2M,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(1,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(1,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId1" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId1</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId2" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId2 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId3" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId3</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId3 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">3</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId4" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId4</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId4 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">4</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="goalQuestionId5" enabled="true">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">goalQuestionId5</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">goalQuestionId&quot;:</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
              <stringProp name="BoundaryExtractor.default">***goalQuestionId5 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">5</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points1" enabled="false">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points1</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points1 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">1</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points2" enabled="false">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points2</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points2 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">2</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points3" enabled="false">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points3</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points3 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">3</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points4" enabled="false">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points4</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points4 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">4</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="points5" enabled="false">
              <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
              <stringProp name="BoundaryExtractor.refname">points5</stringProp>
              <stringProp name="BoundaryExtractor.lboundary">&quot;points&quot;:[</stringProp>
              <stringProp name="BoundaryExtractor.rboundary">,</stringProp>
              <stringProp name="BoundaryExtractor.default">***points5 not found***</stringProp>
              <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
              <stringProp name="BoundaryExtractor.match_number">5</stringProp>
            </BoundaryExtractor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points1" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">points1</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 1 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points2" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">points2</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">2</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 2 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points3" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">points3</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">3</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 3 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points4" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">points4</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[1]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">4</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 4 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="points5" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">points5</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..points[1]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">5</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">points 5 not found</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">p1=vars.get(&quot;points1&quot;);

</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Nutrition Goals" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;answers&quot;:&#xd;
	[{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId1},&#xd;
		&quot;points&quot;:${points1},&#xd;
		&quot;answer&quot;:&quot;yes&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId2},&#xd;
		&quot;points&quot;:${points2},&#xd;
		&quot;answer&quot;:&quot;yes&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId3},&#xd;
		&quot;points&quot;:${points3},&#xd;
		&quot;answer&quot;:&quot;yes&quot;&#xd;
	},&#xd;
	&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId4},&#xd;
		&quot;points&quot;:${points4},&#xd;
		&quot;answer&quot;:&quot;no&quot;&#xd;
	},&#xd;
&#xd;
	{&#xd;
		&quot;goalQuestionId&quot;:${goalQuestionId5},&#xd;
		&quot;points&quot;:${points5},&#xd;
		&quot;answer&quot;:&quot;no&quot;&#xd;
	}],&#xd;
&#xd;
&quot;points&quot;:${__intSum(${points1},${points2},${points3},${points4},${points5})}		&#xd;
&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ssrapi/board/logdata</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">index 0=yes and index 1=no</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">customerid</stringProp>
                  <stringProp name="Header.value">${CustomerID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sessionkey</stringProp>
                  <stringProp name="Header.value">${sessionkey}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">dimensionid</stringProp>
                  <stringProp name="Header.value">9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
              <collectionProp name="Arguments.arguments">
                <elementProp name="nutri_option_1" elementType="Argument">
                  <stringProp name="Argument.name">nutri_option_1</stringProp>
                  <stringProp name="Argument.value">yes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nutri_option_2" elementType="Argument">
                  <stringProp name="Argument.name">nutri_option_2</stringProp>
                  <stringProp name="Argument.value">no</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </Arguments>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">devicetimestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(1,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">timestamp</stringProp>
                  <stringProp name="Header.value">${__timeShift(yyyy-MM-dd HH:mm:ss,,-P${__intSum(1,-${__counter(FALSE,)},)}DT2M,,)}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip</stringProp>
                </elementProp>
              </collectionProp>
              <stringProp name="TestPlan.comments">${__timeShift(MM/dd/yyyy&apos; &apos;HH:mm:ss,,-P${__counter(,)}DT2M,,)}</stringProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="UAT Issue replicate for Empty weekly recap found on Prod" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="iOS: HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">advertisingid</stringProp>
              <stringProp name="Header.value">C4C0DDCB-18A9-4DCB-A368-281F70B9B9AB</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">apikey</stringProp>
              <stringProp name="Header.value">KTJ9hVJTZdVyxZY4xjz5wnE1y8OGCwK65LFZxuaN6rF3HixTMpVg4Od9g9JH/g3zKUIRfnhLOPZ0k/phiRri6RYOby/28WztKpP21alfXeUT+rJb2gz3yamHiqxr69yF</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">appversioncode</stringProp>
              <stringProp name="Header.value">PWH v3.0.0-1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">companyid</stringProp>
              <stringProp name="Header.value">5541</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceosversion</stringProp>
              <stringProp name="Header.value">12.4.0</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">devicetypecode</stringProp>
              <stringProp name="Header.value">iOS</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">deviceToken</stringProp>
              <stringProp name="Header.value">1</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">mac</stringProp>
              <stringProp name="Header.value">a1:a1:a1:a1:a1:a1</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/customers/login</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">email</stringProp>
                <stringProp name="Header.value">pri100@birdzi.com</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">password</stringProp>
                <stringProp name="Header.value">Shiv123!@#</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">gmane@birdzi.com / Birdzi@2010
till
gmane+10</stringProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">email</stringProp>
                <stringProp name="Header.value">${email}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">password</stringProp>
                <stringProp name="Header.value">Shiv123!@#</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="Email" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">user_email</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">,&quot;email&quot;:&quot;</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">&quot;,</stringProp>
            <stringProp name="BoundaryExtractor.default">***Email not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="SessionKey" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">sessionkey</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;sessionKey&quot;:&quot;</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">&quot;,&quot;firstname</stringProp>
            <stringProp name="BoundaryExtractor.default">***session key not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="CustomerID" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">CustomerID</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;customerId&quot;:</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">***not found CustomerID***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BoundaryExtractor guiclass="BoundaryExtractorGui" testclass="BoundaryExtractor" testname="HomeStoreId" enabled="true">
            <stringProp name="BoundaryExtractor.useHeaders">false</stringProp>
            <stringProp name="BoundaryExtractor.refname">HomeStoreId</stringProp>
            <stringProp name="BoundaryExtractor.lboundary">&quot;homeStoreId&quot;:</stringProp>
            <stringProp name="BoundaryExtractor.rboundary">,&quot;</stringProp>
            <stringProp name="BoundaryExtractor.default">***Home store ID not found***</stringProp>
            <boolProp name="BoundaryExtractor.default_empty_value">false</boolProp>
            <stringProp name="BoundaryExtractor.match_number">1</stringProp>
          </BoundaryExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">Email=vars.get(&quot;user_email&quot;);

FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/Anthem/Result/Login_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);
 out.write(Email);
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Dashboard" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getdashboard</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">2337</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Daily Aggregate" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getdailyaggregateslog</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">todaysdate</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">datefrom</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">dateto</stringProp>
                <stringProp name="Header.value">${__time(MM/dd/yyyy,)}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">2337</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getgamechallengecount" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getgamechallengecount</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Yesterday" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__timeShift(yyyy-MM-dd,,P-1D,,)}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Today" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="false">
            <intProp name="groupSize">100</intProp>
            <longProp name="timeoutInMs">0</longProp>
          </SyncTimer>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Game Challenge List" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${PROD_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getgamechallengelist</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Yesterday" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__timeShift(yyyy-MM-dd,,P-1D,,)}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Today" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.1[1:]..name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Yesterday&apos;s Daily challenge not found</stringProp>
            <stringProp name="TestPlan.comments">To get the name of yesterday&apos;s daily challenge</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="2" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.2..name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Weekly challenge not found</stringProp>
            <stringProp name="TestPlan.comments">To get the name of yesterday&apos;s weekly challenge</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">cust_id=vars.get(&quot;CustomerID&quot;);
email=vars.get(&quot;user_email&quot;);
daily=vars.get(&quot;1&quot;);
weekly=vars.get(&quot;2&quot;);


FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/ProdRegister_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);

 out.write(email+ &quot;,&quot; + daily + &quot;,&quot; + weekly + &quot;,&quot; +cust_id);
 
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Weekly Recap" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${UAT_BASE_URL_1}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ssrapi/board/getweeklyrecap</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="2 days" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
          </HeaderManager>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Today" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="1" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">1</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.1[1:]..name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Yesterday&apos;s Daily challenge not found</stringProp>
            <stringProp name="TestPlan.comments">To get the name of yesterday&apos;s daily challenge</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="2" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">2</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.data.gameChallengeList.2..name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">Weekly challenge not found</stringProp>
            <stringProp name="TestPlan.comments">To get the name of yesterday&apos;s weekly challenge</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="CSV" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">cust_id=vars.get(&quot;CustomerID&quot;);
email=vars.get(&quot;user_email&quot;);
daily=vars.get(&quot;1&quot;);
weekly=vars.get(&quot;2&quot;);


FileWriter fstream = new FileWriter(&quot;C:/Users/DELL/Desktop/BirdziPerformanceScripts/Result/ProdRegister_${current_timestamp}.csv&quot;, true);

 BufferedWriter out = new BufferedWriter(fstream);

 out.write(email+ &quot;,&quot; + daily + &quot;,&quot; + weekly + &quot;,&quot; +cust_id);
 
 out.write(System.getProperty(&quot;line.separator&quot;));
 out.close();
 fstream.close();</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">customerId</stringProp>
                <stringProp name="Header.value">${CustomerID}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">storeid</stringProp>
                <stringProp name="Header.value">${HomeStoreId}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">sessionkey</stringProp>
                <stringProp name="Header.value">${sessionkey}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">devicetimestamp</stringProp>
                <stringProp name="Header.value">${__time(yyyy-MM-dd HH:mm:ss,)}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
